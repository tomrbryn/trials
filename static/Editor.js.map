{
  "version": 3,
  "sources": ["../ts/editor/Editor.ts", "../node_modules/svelte/src/runtime/internal/utils.js", "../node_modules/svelte/src/runtime/internal/globals.js", "../node_modules/svelte/src/runtime/internal/ResizeObserverSingleton.js", "../node_modules/svelte/src/runtime/internal/dom.js", "../node_modules/svelte/src/runtime/internal/lifecycle.js", "../node_modules/svelte/src/runtime/internal/scheduler.js", "../node_modules/svelte/src/runtime/internal/transitions.js", "../node_modules/svelte/src/runtime/internal/each.js", "../node_modules/svelte/src/shared/boolean_attributes.js", "../node_modules/svelte/src/runtime/internal/Component.js", "../node_modules/svelte/src/shared/version.js", "../node_modules/svelte/src/runtime/store/index.js", "../ts/editor/LevelEntry.ts", "../ts/editor/EditorStore.ts", "../ts/Canvas.ts", "../ts/Schema.ts", "../ts/GameStructGeneratedCode.ts", "../ts/RiderCreator.ts", "../ts/LevelCreator.ts", "../ts/ServerSideEvents.ts", "../node_modules/svelte/src/runtime/internal/disclose-version/index.js", "../ts/editor/Open.svelte", "../ts/editor/Save.svelte", "../ts/editor/Grid.svelte", "../ts/editor/EditorToolbar.svelte", "../ts/editor/Editor.svelte", "../ts/editor/UndoRedoManager.ts", "../ts/InputRecording.ts", "../ts/Physics.ts", "../ts/game/GameCanvas.ts", "../ts/KeyState.ts"],
  "sourcesContent": ["import { gridStore, defaultGrid, scaleFactorStore, modeStore, modes, levelEntryStore } from './EditorStore';\r\nimport { Canvas } from \"../Canvas\";\r\nimport { type Closest, createLevel, findClosest, levelToBinary, lineArraysToLines, type Point, riderToBinary } from \"../LevelCreator\";\r\nimport { setupReload } from \"../ServerSideEvents\";\r\nimport EditorUI from './Editor.svelte';\r\nimport { UndoRedoManager } from './UndoRedoManager';\r\nimport { createDefaultLevelEntry, type LevelEntry } from './LevelEntry';\r\nimport { createPhysics, Physics } from '../Physics';\r\nimport { createSchema, schemaDefinition } from '../Schema';\r\nimport { GameCanvas } from '../game/GameCanvas';\r\nimport { Rider } from '../GameStructGeneratedCode';\r\nimport { INPUT_CHECKPOINT, KeyState as KeyState } from '../KeyState';\r\nimport type { Action } from './UndoRedoManager';\r\n\r\n// don't show default context menu in browser\r\ndocument.addEventListener('contextmenu', (event) => event.preventDefault());\r\ndocument.addEventListener('DOMContentLoaded', async () => {\r\n    setupReload();\r\n\r\n    levelEntryStore.set({\r\n        id: -1, \r\n        info: {\r\n            name: \"New Level\", \r\n        },\r\n        json: createLevel(), \r\n        base64: \"\"\r\n    });\r\n\r\n    let physics = await createPhysics();\r\n    let schema = createSchema(schemaDefinition);\r\n    let riderData = riderToBinary(schema);\r\n    const editor = new Editor(physics, riderData);\r\n    new EditorUI({target: document.body, props: {editor}});\r\n});\r\n\r\n\r\nexport class Editor {\r\n\r\n    undoRedoManager = new UndoRedoManager();\r\n    levelEntry: LevelEntry;\r\n    center: Point = {x: 0, y: 0};\r\n    scaleFactor = 0.25;\r\n\r\n    constructor(public physics: Physics, public riderData: ArrayBuffer) {\r\n    }\r\n    \r\n    start(canvas: HTMLElement) {\r\n        const MOVE_POINT_MAX_DISTANCE = 200;\r\n\r\n        levelEntryStore.subscribe(value => {\r\n            if (this.levelEntry?.id !== value.id) {\r\n                this.undoRedoManager.clear();\r\n                this.center = {x: 0, y: 0};\r\n                scaleFactorStore.set(0.25);\r\n            }\r\n            this.levelEntry = value;\r\n            this.updatePhysicsLevel();\r\n        });\r\n    \r\n        let mode = modes[0];\r\n        const unsubscribeMode = modeStore.subscribe(value => mode = value);    \r\n        let grid = defaultGrid;\r\n        const unsubscribeGrid = gridStore.subscribe(value => grid = value);    \r\n        const unsubscribeScaleFactor = scaleFactorStore.subscribe(value => this.scaleFactor = value);    \r\n        \r\n        let movePoint: Point | null = null;\r\n        let movePointWorld: Point | null = null;\r\n        let movePointGrid: Point | null = null;\r\n        let pressPoint: Point | null = null;\r\n    \r\n        let addCircleData: number[] | null = null;\r\n        let addLineArrayData: number[][] | null = null;\r\n        let movePointData: Closest | null = null;\r\n        let lastMovePointData: Closest | null = null;\r\n        let panStartCenter: Point | null = null;\r\n        let panStartPressPoint: Point | null = null;\r\n        let scaleStartFactor = 0;\r\n        let scaleStartPressPoint: Point | null = null;\r\n    \r\n        let endCurrentMode = () => {\r\n            if (addLineArrayData) {\r\n                addLineArrayData.pop();\r\n                if (addLineArrayData.length === 0) {\r\n                    this.levelEntry.json.lineArrays.pop();\r\n                }\r\n                addLineArrayData = null;\r\n            }\r\n        }\r\n\r\n        let keyState = new KeyState();\r\n        \r\n        window.addEventListener('keydown', (event) => {\r\n            // console.log(\"keydown\", event.key, event.ctrlKey, event.shiftKey);\r\n            let level = this.levelEntry.json;\r\n            if (event.key === \"1\") {\r\n                endCurrentMode();\r\n                modeStore.set(\"addLineArray\");\r\n            }\r\n            if (event.key === \"2\") {\r\n                endCurrentMode();\r\n                modeStore.set(\"addCircle\");\r\n            }\r\n            if (event.key === \"3\") {\r\n                endCurrentMode();\r\n                modeStore.set(\"addCheckpoint\");\r\n            }\r\n            if (event.key === \"4\") {\r\n                endCurrentMode();\r\n                modeStore.set(\"movePoint\");\r\n            }\r\n            if (event.key === \"Escape\") {\r\n                endCurrentMode();\r\n            }\r\n            if (event.key === \"Delete\" && lastMovePointData) {\r\n                console.log(\"delete\", lastMovePointData);\r\n                let captureMovePointData = lastMovePointData;\r\n                if (lastMovePointData.type === \"lineArrayPoint\") {\r\n                    let capturePoint = level.lineArrays[lastMovePointData.index][lastMovePointData.subIndex];\r\n                    this.addAction({\r\n                        undo: () => level.lineArrays[captureMovePointData.index].splice(captureMovePointData.subIndex, 0, capturePoint), \r\n                        redo: () => level.lineArrays[captureMovePointData.index].splice(captureMovePointData.subIndex, 1)\r\n                    });\r\n                }\r\n                if (lastMovePointData.type === \"circle\") {\r\n                    let captureCircle = level.circles[lastMovePointData.index];\r\n                    this.addAction({\r\n                        undo: () => level.circles.splice(captureMovePointData.index, 0, captureCircle), \r\n                        redo: () => level.circles.splice(captureMovePointData.index, 1)\r\n                    });\r\n                }\r\n                if (lastMovePointData.type === \"checkpoint\") {\r\n                    let captureCheckpoint = level.checkpoints[lastMovePointData.index];\r\n                    this.addAction({\r\n                        undo: () => level.checkpoints.splice(captureMovePointData.index, 0, captureCheckpoint), \r\n                        redo: () => level.checkpoints.splice(captureMovePointData.index, 1)\r\n                    });\r\n                }\r\n            }\r\n            if (event.key === \"z\" && event.ctrlKey) {\r\n                this.undoRedoManager.undo();\r\n            }\r\n            if ((event.key === \"y\" && event.ctrlKey) || (event.key === \"Z\" && event.shiftKey && event.ctrlKey)) {\r\n                this.undoRedoManager.redo();\r\n            }\r\n            if (event.key === \"+\") {\r\n                scaleFactorStore.set(this.scaleFactor * 1.25);\r\n            }\r\n            if (event.key === \"-\") {\r\n                scaleFactorStore.set(this.scaleFactor / 1.25);\r\n            }\r\n            if (event.key === \"Enter\" || event.key === \" \") {\r\n                this.physics.newGame();\r\n            }\r\n            if (event.key === \"m\") {\r\n                let checkpointCount = this.physics.level.getCheckpoints().getLength();\r\n                let current = this.physics.trialsGame.getCurrentCheckpoint();\r\n                this.physics.trialsGame.setCurrentCheckpoint((current + 1) % checkpointCount);\r\n                this.physics.tick(INPUT_CHECKPOINT);\r\n            }\r\n\r\n        });\r\n    \r\n        let mouseEvents = [\"mousedown\", \"mouseup\", \"mousemove\", \"mouseenter\", \"mouseleave\", \"mouseout\", \"wheel\", \"click\", \"dblclick\"];\r\n        for (let event of mouseEvents) {\r\n            window.addEventListener(event, (event: Event) => {\r\n                let mouseEvent = event as MouseEvent;\r\n    \r\n                // transform event to canvas coordinates\r\n                let canvasCoord = canvas.getBoundingClientRect();\r\n                let canvasX = mouseEvent.clientX - canvasCoord.left;\r\n                let canvasY = mouseEvent.clientY - canvasCoord.top;\r\n    \r\n    \r\n                if (event.target == canvas) {\r\n                    if (event.type === \"mousedown\") {\r\n                        pressPoint = {x: canvasX, y: canvasY};\r\n                        onMouseEvent(event.button, event.type, {x: canvasX, y: canvasY})\r\n                    } else if (event.type === \"wheel\") {\r\n                        // console.log(\"wheel\", mouseEvent.deltaY);\r\n                        scaleFactorStore.set(this.scaleFactor * Math.pow(1.01, -10 * mouseEvent.deltaY / Math.abs(mouseEvent.deltaY)));\r\n                    }\r\n                }\r\n                if (event.type === \"mouseup\") {\r\n                    onMouseEvent(event.button, event.type, {x: canvasX, y: canvasY})\r\n                    pressPoint = null;\r\n                    onMouseEvent(event.button, event.type, {x: canvasX, y: canvasY})\r\n                }\r\n                if (event.type === \"mousemove\") {\r\n                    onMouseEvent(event.button, event.type, {x: canvasX, y: canvasY})\r\n                }\r\n            });\r\n        }\r\n    \r\n        const onMouseEvent = (button: number, type: string, pos: Point) => {\r\n            //console.log(\"onMouseEvent\", type, button, pos, pressPoint);\r\n            let level = this.levelEntry.json;\r\n            movePoint = pos;\r\n            movePointWorld = mouseToWorld(pos);\r\n            movePointGrid = mouseToGrid(pos);\r\n            \r\n            if (button === 1 && type === \"mousedown\") { // Scale\r\n                scaleStartPressPoint = pos;\r\n                scaleStartFactor = this.scaleFactor;\r\n            } else if (type === \"mousemove\" && scaleStartPressPoint) {\r\n                let deltaY = scaleStartPressPoint.y - pos.y;\r\n                scaleFactorStore.set(scaleStartFactor * Math.pow(1.01, deltaY));\r\n            } else if (button === 1 && type === \"mouseup\") {\r\n                scaleStartPressPoint = null;\r\n            } else if (button == 2 && type === \"mousedown\") { // Pan\r\n                panStartCenter = this.center;\r\n                panStartPressPoint = pos;\r\n            } else if (type === \"mousemove\" && panStartCenter && panStartPressPoint) {\r\n                this.center = {\r\n                    x: panStartCenter.x - lengthToWorld(pos.x - panStartPressPoint.x), \r\n                    y: panStartCenter.y - lengthToWorld(pos.y - panStartPressPoint.y)\r\n                };\r\n            } else if (button == 2 && type === \"mouseup\") {\r\n                panStartCenter = null;\r\n                panStartPressPoint = null;\r\n            } else if (button === 0 && type === \"mousedown\" && mode === \"addCircle\") { // Add circle\r\n                let posGrid = mouseToGrid(pos);\r\n                addCircleData = [posGrid.x, posGrid.y, grid > 0 ? grid : defaultGrid];\r\n                let capture = addCircleData;\r\n                this.addAction({undo: () => {level.circles.pop()}, redo: () => {level.circles.push(capture)}});\r\n            } else if (type == \"mousemove\" && addCircleData) {\r\n                let posGrid = mouseToGrid(pos);\r\n                let delta = {x: posGrid.x - addCircleData[0], y: posGrid.y - addCircleData[1]};\r\n                addCircleData[2] = Math.sqrt(delta.x * delta.x + delta.y * delta.y);\r\n            } else if (button === 0 && type == \"mouseup\" && addCircleData) {\r\n                addCircleData = null;\r\n            } else if (button === 0 && type === \"mousedown\" && mode === \"addLineArray\") { // Add line array\r\n                let posGrid = mouseToGrid(pos);\r\n                if (addLineArrayData == null) {\r\n                    addLineArrayData = [[posGrid.x, posGrid.y], [posGrid.x, posGrid.y]];\r\n                    let capture = addLineArrayData;\r\n                    this.addAction({undo: () => {level.lineArrays.pop()}, redo: () => {level.lineArrays.push(capture)}});\r\n                } else {\r\n                    let capture = addLineArrayData;\r\n                    this.addAction({undo: () => {capture.pop()}, redo: () => {capture.push([posGrid.x, posGrid.y])}});\r\n                }\r\n            } else if (type == \"mousemove\" && mode === \"addLineArray\" && addLineArrayData) {\r\n                let posGrid = mouseToGrid(pos);\r\n                addLineArrayData[addLineArrayData.length-1] = [posGrid.x, posGrid.y];\r\n            } else if (button === 0 &&type === \"mousedown\" && mode === \"addCheckpoint\") { // Add checkpoint\r\n                let posGrid = mouseToGrid(pos);\r\n                let capture = [posGrid.x, posGrid.y];\r\n                this.addAction({undo: () => {level.checkpoints.pop()}, redo: () => {level.checkpoints.push(capture)}});\r\n            } else if (button === 0 && type === \"mousedown\" && mode === \"movePoint\") { // Move point\r\n                let closest = findClosest(level, mouseToWorld(pos), MOVE_POINT_MAX_DISTANCE);\r\n                if (closest.point) {\r\n                    movePointData = closest;\r\n                }\r\n            } else if (button === 0 && type === \"mouseup\" && movePointData) {\r\n                let capture = movePointData;\r\n                let capturePointGrid = movePointGrid;\r\n                this.addAction({\r\n                    undo: () => updateLevelWithClosestPoint(capture, capture.point),\r\n                    redo: () => updateLevelWithClosestPoint(capture, capturePointGrid)\r\n                });\r\n                // for delete\r\n                lastMovePointData = movePointData;\r\n                movePointData = null;\r\n            } else if (type === \"mousemove\" && movePointData) {\r\n                updateLevelWithClosestPoint(movePointData, movePointGrid);\r\n            }\r\n        }\r\n        const updateLevelWithClosestPoint = (closest: Closest, point: Point) => {\r\n            if (closest.type === \"lineArrayPoint\") {\r\n                this.levelEntry.json.lineArrays[closest.index][closest.subIndex] = [point.x, point.y];\r\n            } else if (closest.type === \"circle\") {\r\n                this.levelEntry.json.circles[closest.index][0] = point.x;\r\n                this.levelEntry.json.circles[closest.index][1] = point.y;\r\n            } else if (closest.type === \"checkpoint\") {\r\n                this.levelEntry.json.checkpoints[closest.index][0] = point.x;\r\n                this.levelEntry.json.checkpoints[closest.index][1] = point.y;\r\n            }\r\n        }        \r\n    \r\n        let lengthToWorld = (length: number) => {\r\n            return length / this.scaleFactor;\r\n        }\r\n    \r\n        let mouseToWorld = (m: Point): Point => {\r\n            return {x: (m.x - canvas.width / 2) / this.scaleFactor + this.center.x, y: (m.y - canvas.height / 2) / this.scaleFactor + this.center.y};\r\n        }\r\n    \r\n        let mouseToGrid = (m: Point): Point => {\r\n            return snapToGrid(mouseToWorld(m));\r\n        }\r\n    \r\n        let snapToGrid = (pos): Point => {\r\n            return (grid > 0) ? {x: Math.round(pos.x / grid) * grid, y: Math.round(pos.y / grid) * grid} : pos;\r\n        }\r\n    \r\n        let update = (timeStampMs: number) => {\r\n            let ctx = Canvas.updateCanvasSize(canvas);\r\n            if (!ctx) {\r\n                return;\r\n            }\r\n            this.physics.tick(keyState.encodeGameInput());\r\n            render(ctx);\r\n            requestAnimationFrame(update);\r\n        }\r\n        let render = (ctx) => {\r\n            let level = this.levelEntry.json;\r\n            ctx.lineWidth = 6;\r\n            ctx.lineCap = \"round\";\r\n            ctx.fillStyle = \"white\";\r\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n\r\n            ctx.font = \"64px 'Open Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif\";\r\n    \r\n\r\n            ctx.save();\r\n            ctx.translate(canvas.width / 2, canvas.height / 2);\r\n            ctx.scale(this.scaleFactor, this.scaleFactor);\r\n            ctx.translate(-this.center.x, -this.center.y);\r\n\r\n\r\n\r\n            if (grid > 0) {\r\n                ctx.strokeStyle = \"#888\";\r\n                let upperLeft = mouseToGrid({x: 0, y: 0});\r\n                let lowerRight = mouseToGrid({x: canvas.width, y: canvas.height});\r\n                let adjustedStartX = upperLeft.x - grid;\r\n                let adjustedStartY = upperLeft.y - grid;\r\n                let adjustedEndX = lowerRight.x + grid;\r\n                let adjustedEndY = lowerRight.y + grid;\r\n                for (let x = adjustedStartX; x <= adjustedEndX; x += grid) {\r\n                    Canvas.drawLine(ctx, x, adjustedStartY, x, adjustedEndY, \"#eee\");\r\n                }\r\n                for (let y = adjustedStartY; y <= adjustedEndY; y += grid) {\r\n                    Canvas.drawLine(ctx, adjustedStartX, y, adjustedEndX, y, \"#eee\");\r\n                }\r\n                Canvas.drawLine(ctx, 0, adjustedStartY, 0, adjustedEndY, \"#aaa\");\r\n                Canvas.drawLine(ctx, adjustedStartX, 0, adjustedEndX, 0, \"#aaa\");\r\n            }\r\n    \r\n            for (let circle of level.circles) {\r\n                Canvas.fillOval(ctx, circle[0], circle[1], circle[2], \"red\");\r\n            }\r\n            if (mode == \"addCircle\" && addCircleData == null && movePointGrid) {\r\n                Canvas.fillOval(ctx, movePointGrid.x, movePointGrid.y, grid > 0 ? grid : defaultGrid, \"#FF000033\");\r\n            }\r\n            let lines = lineArraysToLines(level.lineArrays);\r\n            for (let i=0; i<lines.length; i++) {\r\n                let p1 = lines[i][0]\r\n                let p2 = lines[i][1]\r\n                Canvas.drawLine(ctx, p1[0], p1[1], p2[0], p2[1], \"blue\");\r\n            }\r\n\r\n            GameCanvas.paintRider(ctx, this.physics.rider);\r\n\r\n            if (mode == \"addLineArray\" && addLineArrayData == null && movePointGrid) {\r\n                Canvas.fillOval(ctx, movePointGrid.x, movePointGrid.y, grid > 0 ? grid / 10 : 10, \"#0000FF33\");\r\n            }\r\n            let checkpoints = level.checkpoints;\r\n            for (let cp of checkpoints) {\r\n                Canvas.drawLine(ctx, cp[0], cp[1], cp[0], cp[1]-100, \"#777700\");\r\n                ctx.fillText(\"\uD83D\uDEA9\", cp[0], cp[1]-100);\r\n            }\r\n            if (mode == \"addCheckpoint\" && movePointGrid) {\r\n                Canvas.drawLine(ctx, movePointGrid.x, movePointGrid.y, movePointGrid.x, movePointGrid.y-100, \"#77770033\");\r\n            }\r\n    \r\n            if (mode == \"movePoint\" && movePoint) {\r\n                let closest = findClosest(level, mouseToWorld(movePoint), MOVE_POINT_MAX_DISTANCE);\r\n                if (closest.type === \"checkpoint\") {\r\n                    Canvas.drawLine(ctx, level.checkpoints[closest.index][0], level.checkpoints[closest.index][1], level.checkpoints[closest.index][0], level.checkpoints[closest.index][1]-100, \"#000\");\r\n                } else if (closest.point) {\r\n                    Canvas.strokeOval(ctx, closest.point.x, closest.point.y, grid > 0 ? grid / 5 : 20, \"#000\");\r\n                }\r\n            }\r\n    \r\n            ctx.restore();        \r\n        }\r\n        requestAnimationFrame(update);\r\n    }\r\n    \r\n    addAction(action: Action) {\r\n        this.undoRedoManager.addAction(action);\r\n        this.updatePhysicsLevel();\r\n    }\r\n    \r\n    new() {\r\n        levelEntryStore.set(createDefaultLevelEntry());\r\n    }\r\n\r\n    updatePhysicsLevel() {\r\n        let schema = createSchema(schemaDefinition);\r\n        let levelData = levelToBinary(schema, this.levelEntry.json);\r\n        this.physics.setData(levelData, this.riderData);\r\n    }\r\n}\r\n", "/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n", "/** @type {typeof globalThis} */\nexport const globals =\n\ttypeof window !== 'undefined'\n\t\t? window\n\t\t: typeof globalThis !== 'undefined'\n\t\t? globalThis\n\t\t: // @ts-ignore Node typings have this\n\t\t  global;\n", "import { globals } from './globals.js';\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nexport class ResizeObserverSingleton {\n\t/**\n\t * @private\n\t * @readonly\n\t * @type {WeakMap<Element, import('./private.js').Listener>}\n\t */\n\t_listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n\t/**\n\t * @private\n\t * @type {ResizeObserver}\n\t */\n\t_observer = undefined;\n\n\t/** @type {ResizeObserverOptions} */\n\toptions;\n\n\t/** @param {ResizeObserverOptions} options */\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\n\t/**\n\t * @param {Element} element\n\t * @param {import('./private.js').Listener} listener\n\t * @returns {() => void}\n\t */\n\tobserve(element, listener) {\n\t\tthis._listeners.set(element, listener);\n\t\tthis._getObserver().observe(element, this.options);\n\t\treturn () => {\n\t\t\tthis._listeners.delete(element);\n\t\t\tthis._observer.unobserve(element); // this line can probably be removed\n\t\t};\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_getObserver() {\n\t\treturn (\n\t\t\tthis._observer ??\n\t\t\t(this._observer = new ResizeObserver((entries) => {\n\t\t\t\tfor (const entry of entries) {\n\t\t\t\t\tResizeObserverSingleton.entries.set(entry.target, entry);\n\t\t\t\t\tthis._listeners.get(entry.target)?.(entry);\n\t\t\t\t}\n\t\t\t}))\n\t\t);\n\t}\n}\n\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n", "import { contenteditable_truthy_values, has_prop } from './utils.js';\n\nimport { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst my_children = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmy_children.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = my_children;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seq_len =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seq_len] + 1;\n\t\tconst new_len = seq_len + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[new_len] = i;\n\t\tlongest = Math.max(new_len, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst to_move = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\tto_move.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\tto_move.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\tto_move.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < to_move.length; i++) {\n\t\twhile (j < lis.length && to_move[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(to_move[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tconst lower = prop.toLowerCase(); // for backwards compatibility with existing behavior we do lowercase first\n\tif (lower in node) {\n\t\tnode[lower] = typeof node[lower] === 'boolean' && value === '' ? true : value;\n\t} else if (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/** @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/** @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} process_node\n * @param {() => R} create_node\n * @param {boolean} dont_update_last_index\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, process_node, create_node, dont_update_last_index = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst result_node = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn create_node();\n\t})();\n\tresult_node.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn result_node;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst data_str = '' + data;\n\t\t\tif (node.data.startsWith(data_str)) {\n\t\t\t\tif (node.data.length !== data_str.length) {\n\t\t\t\t\treturn node.splitText(data_str.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = data_str;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tif (claimed_nodes.length === 0) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t'&': '&amp;',\n\t'<': '&lt;'\n};\n\nconst regex_attribute_characters_to_escape = /[\"&<]/g;\n\n/**\n * Note that the attribute itself should be surrounded in double quotes\n * @param {any} attribute\n */\nfunction escape_attribute(attribute) {\n\treturn String(attribute).replace(regex_attribute_characters_to_escape, (match) => escaped[match]);\n}\n\n/**\n * @param {Record<string, string>} attributes\n */\nexport function stringify_spread(attributes) {\n\tlet str = ' ';\n\tfor (const key in attributes) {\n\t\tif (attributes[key] != null) {\n\t\t\tstr += `${key}=\"${escape_attribute(attributes[key])}\" `;\n\t\t}\n\t}\n\n\treturn str;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n", "import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](https://svelte.dev/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n", "import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n", "import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro \u2014 restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro \u2014 we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro \u2014 needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n", "import { transition_in, transition_out } from './transitions.js';\nimport { run_all } from './utils.js';\n\n// general each functions:\n\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nexport function destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {void} */\nexport function outro_and_destroy_block(block, lookup) {\n\ttransition_out(block, 1, 1, () => {\n\t\tlookup.delete(block.key);\n\t});\n}\n\n/** @returns {void} */\nexport function fix_and_destroy_block(block, lookup) {\n\tblock.f();\n\tdestroy_block(block, lookup);\n}\n\n/** @returns {void} */\nexport function fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\n/** @returns {any[]} */\nexport function update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nexport function validate_each_keys(ctx, list, get_context, get_key) {\n\tconst keys = new Map();\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst key = get_key(get_context(ctx, list, i));\n\t\tif (keys.has(key)) {\n\t\t\tlet value = '';\n\t\t\ttry {\n\t\t\t\tvalue = `with value '${String(key)}' `;\n\t\t\t} catch (e) {\n\t\t\t\t// can't stringify\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\n\t\t\t\t\tkey\n\t\t\t\t)} and ${i} ${value}are duplicates`\n\t\t\t);\n\t\t}\n\t\tkeys.set(key, i);\n\t}\n}\n", "const _boolean_attributes = /** @type {const} */ ([\n\t'allowfullscreen',\n\t'allowpaymentrequest',\n\t'async',\n\t'autofocus',\n\t'autoplay',\n\t'checked',\n\t'controls',\n\t'default',\n\t'defer',\n\t'disabled',\n\t'formnovalidate',\n\t'hidden',\n\t'inert',\n\t'ismap',\n\t'loop',\n\t'multiple',\n\t'muted',\n\t'nomodule',\n\t'novalidate',\n\t'open',\n\t'playsinline',\n\t'readonly',\n\t'required',\n\t'reversed',\n\t'selected'\n]);\n\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n *\n * @type {Set<string>}\n */\nexport const boolean_attributes = new Set([..._boolean_attributes]);\n\n/** @typedef {typeof _boolean_attributes[number]} BooleanAttributes */\n", "import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n// TODO: Document the other params\n/**\n * @param {SvelteComponent} component\n * @param {import('./public.js').ComponentConstructorOptions} options\n *\n * @param {import('./utils.js')['not_equal']} not_equal Used to compare props and state values.\n * @param {(target: Element | ShadowRoot) => void} [append_styles] Function that appends styles to the DOM when the component is first initialised.\n * This will be the `add_css` function from the compiled component.\n *\n * @returns {void}\n */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles = null,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\t// TODO: what is the correct type here?\n\t\t\t// @ts-expect-error\n\t\t\tconst nodes = children(options.target);\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn || this.$$c) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Port over props that were set programmatically before ce was initialized\n\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\tif (!(key in this.$$d) && this[key] !== undefined) {\n\t\t\t\t\t\tthis.$$d[key] = this[key]; // don't transform, these were set through JavaScript\n\t\t\t\t\t\tdelete this[key]; // remove the property that shadows the getter/setter\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn && this.$$c) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n", "// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.2.19';\nexport const PUBLIC_VERSION = '4';\n", "import {\n\trun_all,\n\tsubscribe,\n\tnoop,\n\tsafe_not_equal,\n\tis_function,\n\tget_store_value\n} from '../internal/index.js';\n\nconst subscriber_queue = [];\n\n/**\n * Creates a `Readable` store that allows reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#readable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readable(value, start) {\n\treturn {\n\t\tsubscribe: writable(value, start).subscribe\n\t};\n}\n\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#writable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Writable<T>}\n */\nexport function writable(value, start = noop) {\n\t/** @type {import('./public.js').Unsubscriber} */\n\tlet stop;\n\t/** @type {Set<import('./private.js').SubscribeInvalidateTuple<T>>} */\n\tconst subscribers = new Set();\n\t/** @param {T} new_value\n\t * @returns {void}\n\t */\n\tfunction set(new_value) {\n\t\tif (safe_not_equal(value, new_value)) {\n\t\t\tvalue = new_value;\n\t\t\tif (stop) {\n\t\t\t\t// store is ready\n\t\t\t\tconst run_queue = !subscriber_queue.length;\n\t\t\t\tfor (const subscriber of subscribers) {\n\t\t\t\t\tsubscriber[1]();\n\t\t\t\t\tsubscriber_queue.push(subscriber, value);\n\t\t\t\t}\n\t\t\t\tif (run_queue) {\n\t\t\t\t\tfor (let i = 0; i < subscriber_queue.length; i += 2) {\n\t\t\t\t\t\tsubscriber_queue[i][0](subscriber_queue[i + 1]);\n\t\t\t\t\t}\n\t\t\t\t\tsubscriber_queue.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('./public.js').Updater<T>} fn\n\t * @returns {void}\n\t */\n\tfunction update(fn) {\n\t\tset(fn(value));\n\t}\n\n\t/**\n\t * @param {import('./public.js').Subscriber<T>} run\n\t * @param {import('./private.js').Invalidator<T>} [invalidate]\n\t * @returns {import('./public.js').Unsubscriber}\n\t */\n\tfunction subscribe(run, invalidate = noop) {\n\t\t/** @type {import('./private.js').SubscribeInvalidateTuple<T>} */\n\t\tconst subscriber = [run, invalidate];\n\t\tsubscribers.add(subscriber);\n\t\tif (subscribers.size === 1) {\n\t\t\tstop = start(set, update) || noop;\n\t\t}\n\t\trun(value);\n\t\treturn () => {\n\t\t\tsubscribers.delete(subscriber);\n\t\t\tif (subscribers.size === 0 && stop) {\n\t\t\t\tstop();\n\t\t\t\tstop = null;\n\t\t\t}\n\t\t};\n\t}\n\treturn { set, update, subscribe };\n}\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>, set: (value: T) => void, update: (fn: import('./public.js').Updater<T>) => void) => import('./public.js').Unsubscriber | void} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>) => T} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * @template {import('./private.js').Stores} S\n * @template T\n * @param {S} stores\n * @param {Function} fn\n * @param {T} [initial_value]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function derived(stores, fn, initial_value) {\n\tconst single = !Array.isArray(stores);\n\t/** @type {Array<import('./public.js').Readable<any>>} */\n\tconst stores_array = single ? [stores] : stores;\n\tif (!stores_array.every(Boolean)) {\n\t\tthrow new Error('derived() expects stores as input, got a falsy value');\n\t}\n\tconst auto = fn.length < 2;\n\treturn readable(initial_value, (set, update) => {\n\t\tlet started = false;\n\t\tconst values = [];\n\t\tlet pending = 0;\n\t\tlet cleanup = noop;\n\t\tconst sync = () => {\n\t\t\tif (pending) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcleanup();\n\t\t\tconst result = fn(single ? values[0] : values, set, update);\n\t\t\tif (auto) {\n\t\t\t\tset(result);\n\t\t\t} else {\n\t\t\t\tcleanup = is_function(result) ? result : noop;\n\t\t\t}\n\t\t};\n\t\tconst unsubscribers = stores_array.map((store, i) =>\n\t\t\tsubscribe(\n\t\t\t\tstore,\n\t\t\t\t(value) => {\n\t\t\t\t\tvalues[i] = value;\n\t\t\t\t\tpending &= ~(1 << i);\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsync();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tpending |= 1 << i;\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tstarted = true;\n\t\tsync();\n\t\treturn function stop() {\n\t\t\trun_all(unsubscribers);\n\t\t\tcleanup();\n\t\t\t// We need to set this to false because callbacks can still happen despite having unsubscribed:\n\t\t\t// Callbacks might already be placed in the queue which doesn't know it should no longer\n\t\t\t// invoke this derived store.\n\t\t\tstarted = false;\n\t\t};\n\t});\n}\n\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * https://svelte.dev/docs/svelte-store#readonly\n * @template T\n * @param {import('./public.js').Readable<T>} store  - store to make readonly\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readonly(store) {\n\treturn {\n\t\tsubscribe: store.subscribe.bind(store)\n\t};\n}\n\nexport { get_store_value as get };\n", "import type { Level } from \"../LevelCreator\";\r\n\r\nexport type LevelInfo = {\r\n    name: string,\r\n    created?: \"string\",\r\n    updated?: \"string\",\r\n}\r\n\r\nexport type LevelEntry = {\r\n    id: number,\r\n    info: LevelInfo,\r\n    json: Level,\r\n    base64: string,\r\n}\r\n\r\nexport function createDefaultLevelEntry(): LevelEntry {\r\n    return {\r\n        id: -1,\r\n        info: {\r\n            name: \"New Level\",\r\n        },\r\n        json: {\r\n            lineArrays: [[\r\n                [-1100, 0],\r\n                [ 1100, 0],\r\n            ]],\r\n            checkpoints: [\r\n                [-1000, 0],\r\n                [1000, 0],\r\n            ],\r\n            circles: [],\r\n            offset: [0, 0]\r\n        },\r\n        base64: \"\",\r\n    };\r\n}", "import { writable, Writable } from 'svelte/store';\r\nimport type { LevelEntry } from './LevelEntry';\r\nimport { createDefaultLevelEntry } from './LevelEntry';\r\n\r\nexport const levelEntryStore = writable<LevelEntry>(createDefaultLevelEntry());\r\n\r\nexport function clampedWritable(initialValue: number, min: number, max: number): Writable<number> {\r\n    const { subscribe, set, update } = writable(initialValue);\r\n    const fix = (value: number) => parseFloat(Math.min(max, Math.max(min, value)).toFixed(3));\r\n\r\n    return {\r\n        subscribe,\r\n        set: (value: number) => set(fix(value)),\r\n        update: (fn: (value: number) => number) => update(value => fix(fn(value)))\r\n    };\r\n}\r\n\r\n// Create a writable store for the grid value\r\nexport const defaultGrid = 128;\r\nexport const gridStore = writable<number>(defaultGrid);\r\nexport const scaleFactorStore = clampedWritable(0.25, 0.05, 10);\r\n\r\nexport const modes = [\"addLineArray\", \"addCircle\", \"addCheckpoint\", \"movePoint\"];\r\nexport const modeStore = writable<\"addLineArray\" | \"addCircle\" | \"addCheckpoint\" | \"movePoint\">(\"addLineArray\");\r\n", "export class Canvas {\r\n\r\n    static fillOval(ctx: CanvasRenderingContext2D, x: number, y: number, r: number, style: string | null = null) {\r\n        if (style) {\r\n            ctx.fillStyle = style;\r\n        }\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, r, 0, 2 * Math.PI);\r\n        ctx.fill();\r\n    }\r\n\r\n    static strokeOval(ctx: CanvasRenderingContext2D, x: number, y: number, r: number, style: string | null = null) {\r\n        if (style) {\r\n            ctx.strokeStyle = style;\r\n        }\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, r, 0, 2 * Math.PI);\r\n        ctx.stroke();\r\n    }\r\n\r\n    static drawLine(ctx: CanvasRenderingContext2D, x1: number, y1: number, x2: number, y2: number, style: string | null = null) {\r\n        if (style) {\r\n            ctx.strokeStyle = style;\r\n        }\r\n        ctx.beginPath();\r\n        ctx.moveTo(x1, y1);\r\n        ctx.lineTo(x2, y2);\r\n        ctx.stroke();\r\n    }\r\n\r\n    static getContext(canvas: HTMLCanvasElement): CanvasRenderingContext2D | null {\r\n        if (canvas.width <= 0 || canvas.height <= 0) {\r\n            return null;\r\n        }\r\n        return canvas.getContext(\"2d\");\r\n    }\r\n\r\n    static updateCanvasSize(canvas: HTMLCanvasElement): CanvasRenderingContext2D | null {\r\n        if (canvas.width != canvas.clientWidth || canvas.height != canvas.clientHeight) {\r\n            canvas.width = canvas.clientWidth;\r\n            canvas.height = canvas.clientHeight;\r\n        }\r\n        return Canvas.getContext(canvas);\r\n    }\r\n}", "// order is not guaranteed when iterating keys in object so shouldn't use json, but fuck it\r\nexport const schemaDefinition = {\r\n    \"Vertex\": {\r\n        \"x\": \"i64\",\r\n        \"y\": \"i64\",\r\n        \"prevX\": \"i64\",\r\n        \"prevY\": \"i64\",\r\n        \"accX\": \"i64\",\r\n        \"accY\": \"i64\",\r\n        \"radius\": \"i64\",\r\n        \"mass\": \"i64\",\r\n        \"collidable\": \"u32\",\r\n        \"type\": \"u32\"\r\n    },\r\n    \"Edge\": {\r\n        \"length\": \"i64\",\r\n        \"stiffness\": \"i64\",\r\n        \"damping\": \"i64\",\r\n        \"minLength\": \"i64\",\r\n        \"maxLength\": \"i64\",\r\n        \"totalMass\": \"i64\",\r\n        \"visible\": \"u32\",\r\n        \"v1Idx\": \"u32\",\r\n        \"v2Idx\": \"u32\"\r\n    },\r\n    \"Rider\": {\r\n        \"frontWheelIdx\": \"u32\",\r\n        \"backWheelIdx\": \"u32\",\r\n        \"bikeFootIdx\": \"u32\",\r\n        \"chainIdx\": \"u32\",\r\n        \"stearingIdx\": \"u32\",\r\n        \"buttIdx\": \"u32\",\r\n        \"vertices\": \"VertexArray\",\r\n        \"edges\": \"EdgeArray\",\r\n        \"startVertices\": \"VertexArray\",\r\n        \"startEdges\": \"EdgeArray\",\r\n        \"leanForwardsEdgeLengths\": \"i64Array\",\r\n        \"leanBackwardsEdgeLengths\": \"i64Array\",\r\n        \"riderEdgesIndex\": \"u32\",\r\n        \"riderEdgesCount\": \"u32\",\r\n    },\r\n    \"Line\": {\r\n        \"x1\": \"i64\",\r\n        \"y1\": \"i64\",\r\n        \"x2\": \"i64\",\r\n        \"y2\": \"i64\"\r\n    },\r\n    \"Circle\": {\r\n        \"x\": \"i64\",\r\n        \"y\": \"i64\",\r\n        \"radius\": \"i64\"\r\n    },\r\n    \"Checkpoint\": {\r\n        \"x\": \"i64\",\r\n        \"y\": \"i64\",\r\n        \"passed\": \"u32\"\r\n    },\r\n    \"Level\": {\r\n        \"lines\": \"LineArray\",\r\n        \"circles\": \"CircleArray\",\r\n        \"checkpoints\": \"CheckpointArray\"\r\n    },\r\n    \"TrialsGame\": {\r\n        \"state\": \"u32\",\r\n        \"tries\": \"u32\",\r\n        \"currentCheckpoint\": \"u32\",\r\n        \"tickIdx\": \"u32\",\r\n    },\r\n}\r\n\r\nexport type Type = {\r\n    name: string,\r\n    fields: {\r\n        [key: string]: Field\r\n    },\r\n    size: number,\r\n    isPrimitive?: boolean,\r\n    arrayType?: Type,\r\n    arrayTypeName?: string,\r\n}\r\n\r\nexport type Field = {\r\n    name: string,\r\n    type: Type,\r\n    typeName: string,\r\n    offset: number,\r\n}\r\n\r\nexport type Schema = {\r\n    [key: string]: Type\r\n}\r\n\r\nexport function createSchema(schema: any): Schema {\r\n    let types = {\r\n        \"u32\": {name: \"u32\", fields: {}, size: 4, isPrimitive: true}, \r\n        \"i64\": {name: \"i64\", fields: {}, size: 8, isPrimitive: true}, \r\n        \"bool\": {name: \"bool\", fields: {}, size: 4, isPrimitive: true},\r\n    };\r\n    let customTypes = Object.keys(schema).filter((key) => ![\"u32\", \"i64\", \"bool\"].includes(key));\r\n    \r\n    let arrays = [];\r\n    let allFields = [];\r\n    for (let schemaTypeName in schema) {\r\n        let schemaType = schema[schemaTypeName];\r\n        let fields = {};\r\n        for (let schemaFieldName in schemaType) {\r\n            let schemaFieldTypeName = schemaType[schemaFieldName];\r\n            fields[schemaFieldName] = {name: schemaFieldName, type: null, typeName: schemaFieldTypeName, offset: 0};\r\n            if (schemaFieldTypeName.endsWith(\"Array\")) {\r\n                types[schemaFieldTypeName] = {name: schemaFieldTypeName, fields: {}, size: 8, arrayType: null, arrayTypeName: schemaFieldTypeName.replace(\"Array\", \"\")};\r\n                arrays.push(types[schemaFieldTypeName]);\r\n            }\r\n        }\r\n\r\n        types[schemaTypeName] = {name: schemaTypeName, fields: fields, size: null};\r\n        allFields.push(...Object.values(fields));\r\n    }\r\n    arrays.forEach((array) => {array.arrayType = types[array.arrayTypeName]});\r\n    allFields.forEach((field) => {field.type = types[field.typeName]});\r\n\r\n    let calculateOffsetAndSize = (type) => {\r\n        if (type.size == -1) {\r\n            throw new Error(\"Cyclic type definition\");\r\n        }\r\n        if (type.size != null) {\r\n            return type.size;\r\n        }\r\n        type.size = -1;\r\n        let offset = 0;\r\n        for (let field of Object.values(type.fields) as Field[]) {\r\n            field.offset = offset;\r\n            if (field.type.name.endsWith(\"Array\")) {\r\n                offset += 8;\r\n            } else {\r\n                offset += calculateOffsetAndSize(types[field.type.name]);\r\n            }\r\n        }\r\n        type.size = offset;\r\n        return offset;\r\n    }\r\n\r\n    for (let type of Object.values(types)) {\r\n        calculateOffsetAndSize(type);\r\n    }\r\n\r\n    return types;\r\n}\r\n\r\n\r\nexport class FlatUtil {\r\n\r\n    constructor(public schema: Schema, public dataView, public ptr) {\r\n    }\r\n\r\n    getUint32(objectOffset: number, type: string, field: string): number {\r\n        let feildOffset = this.schema[type].fields[field].offset;\r\n        return this.dataView.getUint32(this.ptr + objectOffset + feildOffset, true);\r\n    }\r\n    \r\n    getInt64(objectOffset: number, type: string, field: string): BigInt  {\r\n        let fieldOffset = this.schema[type].fields[field].offset;\r\n        return this.dataView.getBigInt64(this.ptr + objectOffset + fieldOffset, true);\r\n    }\r\n    \r\n    getFp(objectOffset: number, type: string, field: string): number {\r\n        let fieldOffset = this.schema[type].fields[field].offset;\r\n        return Number(this.dataView.getBigInt64(this.ptr + objectOffset + fieldOffset, true)) / (1 << 8);\r\n    }\r\n\r\n    getBool(objectOffset: number, type: string, field: string): boolean {\r\n        let fieldOffset = this.schema[type].fields[field].offset;\r\n        return this.dataView.getUin32(this.ptr + objectOffset + fieldOffset, true) != 0;\r\n    }\r\n\r\n    getArray(objectOffset: number, type: string, field: string): [number, number] {\r\n        let fieldOffset = this.schema[type].fields[field].offset;\r\n        let arrayPtr = this.dataView.getUint32(this.ptr + objectOffset + fieldOffset, true);\r\n        let length = this.dataView.getUint32(this.ptr + objectOffset + fieldOffset + 4, true);\r\n        return [arrayPtr, length];\r\n    }\r\n\r\n    getFpAt(arrayOffset: number, type: string, field: string, index: number): number {\r\n        let elementOffset = arrayOffset + this.schema[type].size * index;\r\n        let fieldOffset = this.schema[type].fields[field].offset;\r\n        return Number(this.dataView.getBigInt64(this.ptr + elementOffset + fieldOffset, true)) / (1 << 8);\r\n    }\r\n\r\n    getObject(objectOffset: number, type: string, field: string): number {\r\n        return this.ptr + objectOffset + this.schema[type].fields[field].offset;\r\n    }\r\n}\r\n\r\n\r\nexport class Builder {\r\n    offset = 0;\r\n    BITS = 8;\r\n\r\n    constructor(public schema: Schema, entryType, public dataView) {\r\n        this.schema = schema;\r\n        this.dataView = dataView;\r\n        this.offset = schema[entryType].size;\r\n    }\r\n\r\n    setUint32(ptr: number, type: string, field: string, value: number) {\r\n        try {\r\n            let offset = this.schema[type].fields[field].offset;\r\n            this.dataView.setUint32(ptr + offset, value, true);\r\n        } catch (e) {\r\n            console.error(\"GameStruct.setUin32\", type, field);\r\n        }\r\n    }\r\n\r\n    setBigInt64(ptr: number, type: string, field: string, value: number) {\r\n        let offset = this.schema[type].fields[field].offset;\r\n        this.dataView.setBigInt64(ptr + offset, value, true);\r\n    }\r\n\r\n    setFp(ptr: number, type: string, field: string, value: number) {\r\n        let offset = this.schema[type].fields[field].offset;\r\n        this.setFpAt(ptr + offset, value);\r\n    }\r\n\r\n    setFpAt(ptr: number, value: number) {\r\n        this.dataView.setBigInt64(ptr, BigInt(Math.round(value * (1 << this.BITS))), true);\r\n    }\r\n\r\n    setArray(ptr: number, type: string, field: string, array): [number, number] {\r\n        let offset = this.schema[type].fields[field].offset;\r\n        this.dataView.setUint32(ptr + offset, array[0], true);\r\n        this.dataView.setUint32(ptr + offset + 4, array[1], true);\r\n        return array;\r\n    }\r\n\r\n    getArrayElement(ptr: number, type: string, index: number): number {\r\n        return ptr + this.schema[type].size * index;\r\n    }\r\n\r\n    createArray(type: string, length: number): [number, number] {\r\n        let ptr = this.offset;\r\n        this.offset += this.schema[type].size * length;\r\n        return [ptr, length];\r\n    }\r\n\r\n    copy(srcPtr: number, destPtr: number, length: number) {\r\n        let srcArray = new Uint8Array(this.dataView.buffer, srcPtr, length);\r\n        let destArray = new Uint8Array(this.dataView.buffer, destPtr, length);\r\n        destArray.set(srcArray);\r\n    }\r\n}\r\n\r\n// let assemblyscriptCode = generateAssemblyScript(createSchema(schemaDefinition));\r\n// console.log(\"aaaaaaaaaaaa\\n\", assemblyscriptCode);\r\n// console.log(\"aaaaaabbbbbaa\\n\", generateCCode(createSchema(schemaDefinition)));\r\n// console.log(\"aaaaaa\\n\", generateJavaScriptCode(createSchema(schemaDefinition)));\r\n ", "export class Vertex {\n\n    static SIZE = 72;\n\n    constructor(public dataView: DataView, public ptr: number = 0) {\n    }\n\n    setX(newValue: number) {\n        this.dataView.setBigInt64(this.ptr + 0, newValue, true);\n    }\n\n    getX(): number {\n        return Number(this.dataView.getBigInt64(this.ptr + 0, true) / 256n);\n    }\n\n    setY(newValue: number) {\n        this.dataView.setBigInt64(this.ptr + 8, newValue, true);\n    }\n\n    getY(): number {\n        return Number(this.dataView.getBigInt64(this.ptr + 8, true) / 256n);\n    }\n\n    setPrevX(newValue: number) {\n        this.dataView.setBigInt64(this.ptr + 16, newValue, true);\n    }\n\n    getPrevX(): number {\n        return Number(this.dataView.getBigInt64(this.ptr + 16, true) / 256n);\n    }\n\n    setPrevY(newValue: number) {\n        this.dataView.setBigInt64(this.ptr + 24, newValue, true);\n    }\n\n    getPrevY(): number {\n        return Number(this.dataView.getBigInt64(this.ptr + 24, true) / 256n);\n    }\n\n    setAccX(newValue: number) {\n        this.dataView.setBigInt64(this.ptr + 32, newValue, true);\n    }\n\n    getAccX(): number {\n        return Number(this.dataView.getBigInt64(this.ptr + 32, true) / 256n);\n    }\n\n    setAccY(newValue: number) {\n        this.dataView.setBigInt64(this.ptr + 40, newValue, true);\n    }\n\n    getAccY(): number {\n        return Number(this.dataView.getBigInt64(this.ptr + 40, true) / 256n);\n    }\n\n    setRadius(newValue: number) {\n        this.dataView.setBigInt64(this.ptr + 48, newValue, true);\n    }\n\n    getRadius(): number {\n        return Number(this.dataView.getBigInt64(this.ptr + 48, true) / 256n);\n    }\n\n    setMass(newValue: number) {\n        this.dataView.setBigInt64(this.ptr + 56, newValue, true);\n    }\n\n    getMass(): number {\n        return Number(this.dataView.getBigInt64(this.ptr + 56, true) / 256n);\n    }\n\n    setCollidable(newValue: number) {\n        this.dataView.setUint32(this.ptr + 64, newValue, true);\n    }\n\n    getCollidable(): number {\n        return Number(this.dataView.getUint32(this.ptr + 64, true));\n    }\n\n    setType(newValue: number) {\n        this.dataView.setUint32(this.ptr + 68, newValue, true);\n    }\n\n    getType(): number {\n        return Number(this.dataView.getUint32(this.ptr + 68, true));\n    }\n}\n\nexport class Edge {\n\n    static SIZE = 60;\n\n    constructor(public dataView: DataView, public ptr: number = 0) {\n    }\n\n    setLength(newValue: number) {\n        this.dataView.setBigInt64(this.ptr + 0, newValue, true);\n    }\n\n    getLength(): number {\n        return Number(this.dataView.getBigInt64(this.ptr + 0, true) / 256n);\n    }\n\n    setStiffness(newValue: number) {\n        this.dataView.setBigInt64(this.ptr + 8, newValue, true);\n    }\n\n    getStiffness(): number {\n        return Number(this.dataView.getBigInt64(this.ptr + 8, true) / 256n);\n    }\n\n    setDamping(newValue: number) {\n        this.dataView.setBigInt64(this.ptr + 16, newValue, true);\n    }\n\n    getDamping(): number {\n        return Number(this.dataView.getBigInt64(this.ptr + 16, true) / 256n);\n    }\n\n    setMinLength(newValue: number) {\n        this.dataView.setBigInt64(this.ptr + 24, newValue, true);\n    }\n\n    getMinLength(): number {\n        return Number(this.dataView.getBigInt64(this.ptr + 24, true) / 256n);\n    }\n\n    setMaxLength(newValue: number) {\n        this.dataView.setBigInt64(this.ptr + 32, newValue, true);\n    }\n\n    getMaxLength(): number {\n        return Number(this.dataView.getBigInt64(this.ptr + 32, true) / 256n);\n    }\n\n    setTotalMass(newValue: number) {\n        this.dataView.setBigInt64(this.ptr + 40, newValue, true);\n    }\n\n    getTotalMass(): number {\n        return Number(this.dataView.getBigInt64(this.ptr + 40, true) / 256n);\n    }\n\n    setVisible(newValue: number) {\n        this.dataView.setUint32(this.ptr + 48, newValue, true);\n    }\n\n    getVisible(): number {\n        return Number(this.dataView.getUint32(this.ptr + 48, true));\n    }\n\n    setV1Idx(newValue: number) {\n        this.dataView.setUint32(this.ptr + 52, newValue, true);\n    }\n\n    getV1Idx(): number {\n        return Number(this.dataView.getUint32(this.ptr + 52, true));\n    }\n\n    setV2Idx(newValue: number) {\n        this.dataView.setUint32(this.ptr + 56, newValue, true);\n    }\n\n    getV2Idx(): number {\n        return Number(this.dataView.getUint32(this.ptr + 56, true));\n    }\n}\n\nexport class VertexArray {\n\n    static SIZE = 8;\n\n    constructor(public dataView: DataView, public ptr: number = 0) {\n    }\n\n    getOffset(): number {\n        return this.dataView.getUint32(this.ptr, true);\n    }\n\n    getLength(): number {\n        return this.dataView.getUint32(this.ptr + 4, true);\n    }\n\n    get(i: number): Vertex {\n        return new Vertex(this.dataView, this.getOffset() + i * 72);\n    }\n}\n\nexport class EdgeArray {\n\n    static SIZE = 8;\n\n    constructor(public dataView: DataView, public ptr: number = 0) {\n    }\n\n    getOffset(): number {\n        return this.dataView.getUint32(this.ptr, true);\n    }\n\n    getLength(): number {\n        return this.dataView.getUint32(this.ptr + 4, true);\n    }\n\n    get(i: number): Edge {\n        return new Edge(this.dataView, this.getOffset() + i * 60);\n    }\n}\n\nexport class i64Array {\n\n    static SIZE = 8;\n\n    constructor(public dataView: DataView, public ptr: number = 0) {\n    }\n\n    getOffset(): number {\n        return this.dataView.getUint32(this.ptr, true);\n    }\n\n    getLength(): number {\n        return this.dataView.getUint32(this.ptr + 4, true);\n    }\n\n    get(i: number): i64 {\n        return new i64(this.dataView, this.getOffset() + i * 8);\n    }\n}\n\nexport class Rider {\n\n    static SIZE = 80;\n\n    constructor(public dataView: DataView, public ptr: number = 0) {\n    }\n\n    setFrontWheelIdx(newValue: number) {\n        this.dataView.setUint32(this.ptr + 0, newValue, true);\n    }\n\n    getFrontWheelIdx(): number {\n        return Number(this.dataView.getUint32(this.ptr + 0, true));\n    }\n\n    setBackWheelIdx(newValue: number) {\n        this.dataView.setUint32(this.ptr + 4, newValue, true);\n    }\n\n    getBackWheelIdx(): number {\n        return Number(this.dataView.getUint32(this.ptr + 4, true));\n    }\n\n    setBikeFootIdx(newValue: number) {\n        this.dataView.setUint32(this.ptr + 8, newValue, true);\n    }\n\n    getBikeFootIdx(): number {\n        return Number(this.dataView.getUint32(this.ptr + 8, true));\n    }\n\n    setChainIdx(newValue: number) {\n        this.dataView.setUint32(this.ptr + 12, newValue, true);\n    }\n\n    getChainIdx(): number {\n        return Number(this.dataView.getUint32(this.ptr + 12, true));\n    }\n\n    setStearingIdx(newValue: number) {\n        this.dataView.setUint32(this.ptr + 16, newValue, true);\n    }\n\n    getStearingIdx(): number {\n        return Number(this.dataView.getUint32(this.ptr + 16, true));\n    }\n\n    setButtIdx(newValue: number) {\n        this.dataView.setUint32(this.ptr + 20, newValue, true);\n    }\n\n    getButtIdx(): number {\n        return Number(this.dataView.getUint32(this.ptr + 20, true));\n    }\n\n    getVertices(): VertexArray {\n        return new VertexArray(this.dataView, this.ptr + 24);\n    }\n\n    getEdges(): EdgeArray {\n        return new EdgeArray(this.dataView, this.ptr + 32);\n    }\n\n    getStartVertices(): VertexArray {\n        return new VertexArray(this.dataView, this.ptr + 40);\n    }\n\n    getStartEdges(): EdgeArray {\n        return new EdgeArray(this.dataView, this.ptr + 48);\n    }\n\n    getLeanForwardsEdgeLengths(): i64Array {\n        return new i64Array(this.dataView, this.ptr + 56);\n    }\n\n    getLeanBackwardsEdgeLengths(): i64Array {\n        return new i64Array(this.dataView, this.ptr + 64);\n    }\n\n    setRiderEdgesIndex(newValue: number) {\n        this.dataView.setUint32(this.ptr + 72, newValue, true);\n    }\n\n    getRiderEdgesIndex(): number {\n        return Number(this.dataView.getUint32(this.ptr + 72, true));\n    }\n\n    setRiderEdgesCount(newValue: number) {\n        this.dataView.setUint32(this.ptr + 76, newValue, true);\n    }\n\n    getRiderEdgesCount(): number {\n        return Number(this.dataView.getUint32(this.ptr + 76, true));\n    }\n}\n\nexport class Line {\n\n    static SIZE = 32;\n\n    constructor(public dataView: DataView, public ptr: number = 0) {\n    }\n\n    setX1(newValue: number) {\n        this.dataView.setBigInt64(this.ptr + 0, newValue, true);\n    }\n\n    getX1(): number {\n        return Number(this.dataView.getBigInt64(this.ptr + 0, true) / 256n);\n    }\n\n    setY1(newValue: number) {\n        this.dataView.setBigInt64(this.ptr + 8, newValue, true);\n    }\n\n    getY1(): number {\n        return Number(this.dataView.getBigInt64(this.ptr + 8, true) / 256n);\n    }\n\n    setX2(newValue: number) {\n        this.dataView.setBigInt64(this.ptr + 16, newValue, true);\n    }\n\n    getX2(): number {\n        return Number(this.dataView.getBigInt64(this.ptr + 16, true) / 256n);\n    }\n\n    setY2(newValue: number) {\n        this.dataView.setBigInt64(this.ptr + 24, newValue, true);\n    }\n\n    getY2(): number {\n        return Number(this.dataView.getBigInt64(this.ptr + 24, true) / 256n);\n    }\n}\n\nexport class Circle {\n\n    static SIZE = 24;\n\n    constructor(public dataView: DataView, public ptr: number = 0) {\n    }\n\n    setX(newValue: number) {\n        this.dataView.setBigInt64(this.ptr + 0, newValue, true);\n    }\n\n    getX(): number {\n        return Number(this.dataView.getBigInt64(this.ptr + 0, true) / 256n);\n    }\n\n    setY(newValue: number) {\n        this.dataView.setBigInt64(this.ptr + 8, newValue, true);\n    }\n\n    getY(): number {\n        return Number(this.dataView.getBigInt64(this.ptr + 8, true) / 256n);\n    }\n\n    setRadius(newValue: number) {\n        this.dataView.setBigInt64(this.ptr + 16, newValue, true);\n    }\n\n    getRadius(): number {\n        return Number(this.dataView.getBigInt64(this.ptr + 16, true) / 256n);\n    }\n}\n\nexport class Checkpoint {\n\n    static SIZE = 20;\n\n    constructor(public dataView: DataView, public ptr: number = 0) {\n    }\n\n    setX(newValue: number) {\n        this.dataView.setBigInt64(this.ptr + 0, newValue, true);\n    }\n\n    getX(): number {\n        return Number(this.dataView.getBigInt64(this.ptr + 0, true) / 256n);\n    }\n\n    setY(newValue: number) {\n        this.dataView.setBigInt64(this.ptr + 8, newValue, true);\n    }\n\n    getY(): number {\n        return Number(this.dataView.getBigInt64(this.ptr + 8, true) / 256n);\n    }\n\n    setPassed(newValue: number) {\n        this.dataView.setUint32(this.ptr + 16, newValue, true);\n    }\n\n    getPassed(): number {\n        return Number(this.dataView.getUint32(this.ptr + 16, true));\n    }\n}\n\nexport class LineArray {\n\n    static SIZE = 8;\n\n    constructor(public dataView: DataView, public ptr: number = 0) {\n    }\n\n    getOffset(): number {\n        return this.dataView.getUint32(this.ptr, true);\n    }\n\n    getLength(): number {\n        return this.dataView.getUint32(this.ptr + 4, true);\n    }\n\n    get(i: number): Line {\n        return new Line(this.dataView, this.getOffset() + i * 32);\n    }\n}\n\nexport class CircleArray {\n\n    static SIZE = 8;\n\n    constructor(public dataView: DataView, public ptr: number = 0) {\n    }\n\n    getOffset(): number {\n        return this.dataView.getUint32(this.ptr, true);\n    }\n\n    getLength(): number {\n        return this.dataView.getUint32(this.ptr + 4, true);\n    }\n\n    get(i: number): Circle {\n        return new Circle(this.dataView, this.getOffset() + i * 24);\n    }\n}\n\nexport class CheckpointArray {\n\n    static SIZE = 8;\n\n    constructor(public dataView: DataView, public ptr: number = 0) {\n    }\n\n    getOffset(): number {\n        return this.dataView.getUint32(this.ptr, true);\n    }\n\n    getLength(): number {\n        return this.dataView.getUint32(this.ptr + 4, true);\n    }\n\n    get(i: number): Checkpoint {\n        return new Checkpoint(this.dataView, this.getOffset() + i * 20);\n    }\n}\n\nexport class Level {\n\n    static SIZE = 24;\n\n    constructor(public dataView: DataView, public ptr: number = 0) {\n    }\n\n    getLines(): LineArray {\n        return new LineArray(this.dataView, this.ptr + 0);\n    }\n\n    getCircles(): CircleArray {\n        return new CircleArray(this.dataView, this.ptr + 8);\n    }\n\n    getCheckpoints(): CheckpointArray {\n        return new CheckpointArray(this.dataView, this.ptr + 16);\n    }\n}\n\nexport class TrialsGame {\n\n    static SIZE = 16;\n\n    constructor(public dataView: DataView, public ptr: number = 0) {\n    }\n\n    setState(newValue: number) {\n        this.dataView.setUint32(this.ptr + 0, newValue, true);\n    }\n\n    getState(): number {\n        return Number(this.dataView.getUint32(this.ptr + 0, true));\n    }\n\n    setTries(newValue: number) {\n        this.dataView.setUint32(this.ptr + 4, newValue, true);\n    }\n\n    getTries(): number {\n        return Number(this.dataView.getUint32(this.ptr + 4, true));\n    }\n\n    setCurrentCheckpoint(newValue: number) {\n        this.dataView.setUint32(this.ptr + 8, newValue, true);\n    }\n\n    getCurrentCheckpoint(): number {\n        return Number(this.dataView.getUint32(this.ptr + 8, true));\n    }\n\n    setTickIdx(newValue: number) {\n        this.dataView.setUint32(this.ptr + 12, newValue, true);\n    }\n\n    getTickIdx(): number {\n        return Number(this.dataView.getUint32(this.ptr + 12, true));\n    }\n}\n\n", "import { Rider } from \"./GameStructGeneratedCode\";\r\nimport { Builder } from \"./Schema\";\r\nimport { Vertex as VertexStruct, Edge as EdgeStruct } from \"./GameStructGeneratedCode\";\r\n\r\nexport const TYPE_UNKNOWN = 0;\r\nexport const TYPE_RIDER = 1;\r\nexport const TYPE_BACK_WHEEL = 2;\r\nexport const TYPE_FRONT_WHEEL = 3;\r\n\r\nfunction seededRandom(seed: number): () => number {\r\n    // Parameters for the LCG\r\n    const a = 1664525;\r\n    const c = 1013904223;\r\n    const m = 2 ** 32;\r\n\r\n    // Create the LCG function\r\n    return function(): number {\r\n        // Update the seed using the LCG formula\r\n        seed = (a * seed + c) % m;\r\n        \r\n        // Return a float between 0 and 1\r\n        return seed / m;\r\n    };\r\n}    \r\n\r\nclass Tuple {\r\n    x = 0;\r\n    y = 0;\r\n}\r\n\r\nclass Vertex {\r\n    pos = new Tuple();\r\n    old = new Tuple(); \r\n    acc = new Tuple(); \r\n    radius = 0; \r\n    mass = 1; \r\n    collidable = false;\r\n    type = TYPE_UNKNOWN;\r\n\r\n    update() {\r\n        const tempX = this.pos.x;\r\n        const tempY = this.pos.y;\r\n        this.pos.x += this.pos.x - this.old.x + this.acc.x;\r\n        this.pos.y += this.pos.y - this.old.y + this.acc.y;\r\n        this.old.x = tempX;\r\n        this.old.y = tempY;\r\n    }\r\n\r\n    static lineLength(v1: Vertex, v2: Vertex) {\r\n        const dx = v1.pos.x - v2.pos.x;\r\n        const dy = v1.pos.y - v2.pos.y;\r\n        return Math.sqrt((dx * dx) + (dy * dy));\r\n    }\r\n}\r\n\r\nclass Edge {\r\n    length = 0;\r\n    stiffness = 0;\r\n    damping = 0;\r\n    minLength = 0;\r\n    maxLength = 0;\r\n    totalMass = 0;\r\n    visible = false;\r\n    // maps into vertices\r\n    v1Idx = 0;\r\n    v2Idx = 0;\r\n}\r\n\r\nfunction createVertex(x, y, radius, type = TYPE_UNKNOWN): Vertex {\r\n    const v = new Vertex();\r\n    v.pos.x = x;\r\n    v.pos.y = y;\r\n    v.old.x = x;\r\n    v.old.y = y;\r\n    v.radius = radius;\r\n    v.mass = Math.PI * radius * radius;\r\n    v.collidable = true;\r\n    v.type = type;\r\n    return v;\r\n}\r\n\r\n\r\nfunction createEdge(globalVs, v1, v2, stiffness, damping) {   \r\n    const edge = new Edge();\r\n    edge.stiffness = stiffness;\r\n    edge.damping = damping;\r\n    edge.v1Idx = globalVs.indexOf(v1);\r\n    edge.v2Idx = globalVs.indexOf(v2);\r\n    edge.length = Vertex.lineLength(v1, v2);\r\n    edge.totalMass = v1.mass + v2.mass;\r\n    edge.maxLength = 100000;\r\n    edge.visible = true;\r\n    return edge;\r\n}\r\n\r\nfunction createEdges(globalVs: Vertex[], vs: Vertex[], stiffness: number): Edge[] {\r\n    const edges: Edge[] = [];\r\n    for (let i = 0; i < vs.length; i++) {\r\n        for (let j = i + 1; j < vs.length; j++) {\r\n            edges.push(createEdge(globalVs, vs[i], vs[j], stiffness, 0));\r\n        }\r\n    }\r\n    return edges;\r\n}\r\n\r\nexport class RiderCreator {\r\n    vertices: Vertex[] = [];\r\n    edges: Edge[] = [];\r\n    leanForwardsEdgeLengths: number[] = [];\r\n    leanBackwardsEdgeLengths: number[] = [];\r\n    riderEdgesIndex = 0;\r\n    riderEdgesCount = 0;\r\n    backWheelIdx = 0;\r\n    frontWheelIdx = 0;\r\n    bikeFootIdx = 0;\r\n    chainIdx = 0;\r\n    stearingIdx = 0;\r\n    buttIdx = 0;\r\n\r\n\r\n    create() {\r\n        // -------------- create bike ----------------\r\n        this.backWheelIdx = this.createWheel(48, 125, 38, 8, TYPE_BACK_WHEEL);\r\n        this.frontWheelIdx = this.createWheel(223, 125, 38, 8, TYPE_BACK_WHEEL);\r\n        const backWheel = this.vertices[this.backWheelIdx];\r\n        const frontWheel = this.vertices[this.frontWheelIdx];\r\n        let stearing = createVertex(176, 19, 10); // stearing\r\n        let bikeFoot = createVertex(101, 114, 10); // foot\r\n        let chain = createVertex(125, 113, 13); // chain front center\r\n        let engine = createVertex(125, 33, 15);\r\n        const round = createVertex(144, 116, 11); //\r\n        const skjerm = createVertex(70, 59, 8); // back skjerm\r\n        let vs = [stearing, bikeFoot, chain, round, skjerm, engine];\r\n        this.bikeFootIdx = this.vertices.length + vs.indexOf(bikeFoot);\r\n        this.chainIdx = this.vertices.length + vs.indexOf(chain);\r\n        this.stearingIdx = this.vertices.length + vs.indexOf(stearing);\r\n        for (let vsIdx=0; vsIdx < vs.length; vsIdx++) {\r\n            this.vertices.push(vs[vsIdx]);\r\n        }\r\n\r\n        const hard = 1;\r\n        this.addRandomEdges(createEdges(this.vertices, vs, hard));\r\n\r\n        const frontSpring = createEdge(this.vertices, frontWheel, stearing,  0.15, 0);\r\n        frontSpring.damping = 0.05;\r\n        frontSpring.maxLength = 120;//116;\r\n        frontSpring.minLength = 90;\r\n        frontSpring.length = 120;\r\n        this.addRandom(frontSpring);\r\n        this.addRandom(createEdge(this.vertices, frontWheel, chain, hard, 0));\r\n        this.addRandom(createEdge(this.vertices, frontWheel, chain, hard, 0));\r\n        this.addRandom(createEdge(this.vertices, frontWheel, chain, hard, 0));\r\n        this.addRandom(createEdge(this.vertices, backWheel, chain, hard, 0));\r\n        this.addRandom(createEdge(this.vertices, backWheel, chain, hard, 0));\r\n        this.addRandom(createEdge(this.vertices, backWheel, chain, hard, 0));\r\n        const e = createEdge(this.vertices, backWheel, skjerm, .12, 0);\r\n        e.maxLength = 70;//69;\r\n        e.minLength = 50;\r\n        e.damping = 0.05;\r\n        this.addRandom(e);\r\n        this.addRandom(e);\r\n\r\n        // ------------- create rider ------------------\r\n        let knee = createVertex(130, 80, 11, TYPE_RIDER);\r\n        let butt = createVertex(95, 50, 15, TYPE_RIDER);\r\n        let shoulders = createVertex(137, 15, 15, TYPE_RIDER);\r\n        let head = createVertex(150, -10, 10, TYPE_RIDER);\r\n        let foot = createVertex(100, 114, 10, TYPE_RIDER);\r\n        foot.collidable = false;\r\n        let hands = createVertex(175, 19, 10, TYPE_RIDER);\r\n\r\n        let knee2 = createVertex(130, 80, 11, TYPE_RIDER);\r\n        let butt2 = createVertex(130, 20, 15, TYPE_RIDER);\r\n        let shoulders2 = createVertex(175, -20, 15, TYPE_RIDER);\r\n        let head2 = createVertex(190, -45, 10, TYPE_RIDER);\r\n        let foot2 = createVertex(100, 114, 10, TYPE_RIDER);\r\n        foot2.collidable = false;\r\n        let hands2 = createVertex(175, 19, 10, TYPE_RIDER);\r\n\r\n        let riderVertices = [knee, butt, shoulders, head, foot, hands];\r\n        this.buttIdx = this.vertices.length + riderVertices.indexOf(butt);\r\n\r\n        for (let i=0; i < riderVertices.length; i++) {\r\n            this.vertices.push(riderVertices[i]);\r\n        }\r\n        riderVertices.push(stearing);\r\n        riderVertices.push(bikeFoot);\r\n        // riderVertices.push(skjerm);\r\n        // riderVertices.push(engine);\r\n\r\n        \r\n        let vs2: Vertex[] = [knee2, butt2, shoulders2, head2, foot2, hands2, stearing, bikeFoot/*, skjerm, engine*/];\r\n\r\n        this.leanForwardsEdgeLengths = createEdges(this.vertices, riderVertices, 0.9).map(e => e.length);\r\n        let riderEdges = createEdges(this.vertices, riderVertices, 0.9);\r\n        this.leanBackwardsEdgeLengths = createEdges(vs2, vs2, 0.9).map(e => e.length);\r\n        this.riderEdgesIndex = this.edges.length;\r\n        this.riderEdgesCount = riderEdges.length;\r\n        this.addEdges(riderEdges);\r\n    }\r\n\r\n    createWheel(x: number, y: number, radius: number, tireRadius: number, type: number): number {\r\n        const wheel = createVertex(x, y, radius + tireRadius, type);\r\n        wheel.mass = 500;\r\n        wheel.old.x = wheel.pos.x;\r\n        return this.vertices.push(wheel) - 1;\r\n    }\r\n    \r\n    addEdges(edges: Edge[]) {\r\n        this.edges.push(...edges);\r\n    }\r\n\r\n    addRandomEdges(edges: Edge[]) {\r\n        for (let i = 0; i < edges.length; i++) {\r\n            this.addRandom(edges[i]);\r\n        }\r\n    }\r\n\r\n    addRandom(edge: Edge) {\r\n        let random = seededRandom(123456);\r\n        let idx = Math.floor(random() * this.edges.length);\r\n        this.edges.splice(idx, 0, edge);\r\n    }\r\n\r\n    applyToBuilder(b: Builder) {\r\n\r\n        b.setUint32(0, \"Rider\", \"riderEdgesIndex\", this.riderEdgesIndex);\r\n        b.setUint32(0, \"Rider\", \"riderEdgesCount\", this.riderEdgesCount);\r\n        b.setUint32(0, \"Rider\", \"backWheelIdx\", this.backWheelIdx);\r\n        b.setUint32(0, \"Rider\", \"frontWheelIdx\", this.frontWheelIdx);\r\n        b.setUint32(0, \"Rider\", \"bikeFootIdx\", this.bikeFootIdx);\r\n        b.setUint32(0, \"Rider\", \"chainIdx\", this.chainIdx);\r\n        b.setUint32(0, \"Rider\", \"stearingIdx\", this.stearingIdx);\r\n        b.setUint32(0, \"Rider\", \"buttIdx\", this.buttIdx);\r\n        let [verticesPtr, verticesLength] = b.setArray(0, \"Rider\", \"vertices\", b.createArray(\"Vertex\", this.vertices.length));\r\n        for (let i = 0; i < this.vertices.length; i++) {\r\n            let vertexPtr = b.getArrayElement(verticesPtr, \"Vertex\", i);\r\n            b.setFp(vertexPtr, \"Vertex\", \"x\", this.vertices[i].pos.x);\r\n            b.setFp(vertexPtr, \"Vertex\", \"y\", this.vertices[i].pos.y);\r\n            b.setFp(vertexPtr, \"Vertex\", \"radius\", this.vertices[i].radius);\r\n            b.setFp(vertexPtr, \"Vertex\", \"mass\", this.vertices[i].mass);\r\n            b.setUint32(vertexPtr, \"Vertex\", \"collidable\", this.vertices[i].collidable ? 1 : 0);\r\n            b.setUint32(vertexPtr, \"Vertex\", \"type\", this.vertices[i].type);\r\n        }\r\n        let [startVerticesPtr, startVerticesLength] = b.setArray(0, \"Rider\", \"startVertices\", b.createArray(\"Vertex\", this.vertices.length));\r\n        b.copy(verticesPtr, startVerticesPtr, startVerticesLength * VertexStruct.SIZE);\r\n        let [edgesPtr, edgesLength] = b.setArray(0, \"Rider\", \"edges\", b.createArray(\"Edge\", this.edges.length));\r\n        for (let i = 0; i < this.edges.length; i++) {\r\n            let edge = b.getArrayElement(edgesPtr, \"Edge\", i);\r\n            b.setFp(edge, \"Edge\", \"length\", this.edges[i].length);\r\n            b.setFp(edge, \"Edge\", \"stiffness\", this.edges[i].stiffness);\r\n            b.setFp(edge, \"Edge\", \"damping\", this.edges[i].damping);\r\n            b.setFp(edge, \"Edge\", \"minLength\", this.edges[i].minLength);\r\n            b.setFp(edge, \"Edge\", \"maxLength\", this.edges[i].maxLength);\r\n            b.setFp(edge, \"Edge\", \"totalMass\", this.edges[i].totalMass);\r\n            b.setUint32(edge, \"Edge\", \"visible\", this.edges[i].visible ? 1 : 0);\r\n            b.setUint32(edge, \"Edge\", \"v1Idx\", this.edges[i].v1Idx);\r\n            b.setUint32(edge, \"Edge\", \"v2Idx\", this.edges[i].v2Idx);\r\n        }\r\n        let [startEdgesPtr, startEdgesLength] = b.setArray(0, \"Rider\", \"startEdges\", b.createArray(\"Edge\", this.edges.length));\r\n        b.copy(edgesPtr, startEdgesPtr, edgesLength * EdgeStruct.SIZE);\r\n        let [forwardsPtr, forwardsLength] = b.setArray(0, \"Rider\", \"leanForwardsEdgeLengths\", b.createArray(\"i64\", this.leanForwardsEdgeLengths.length));\r\n        for (let i = 0; i < this.leanForwardsEdgeLengths.length; i++) {\r\n            b.setFpAt(forwardsPtr + i * 8, this.leanForwardsEdgeLengths[i]);\r\n        }\r\n        let [backwardsPtr, backwardsLength] = b.setArray(0, \"Rider\", \"leanBackwardsEdgeLengths\", b.createArray(\"i64\", this.leanBackwardsEdgeLengths.length));\r\n        for (let i = 0; i < this.leanBackwardsEdgeLengths.length; i++) {\r\n            b.setFpAt(backwardsPtr + i * 8, this.leanBackwardsEdgeLengths[i]);\r\n        }\r\n    }\r\n}\r\n\r\nexport function debugRiderData(riderData: ArrayBuffer) {\r\n    debugRider(new Rider(new DataView(riderData)));\r\n}\r\n\r\nexport function debugRider(rider: Rider) {\r\n    console.log(\"debugRider\");\r\n    console.log(\"  fontWheel: \", rider.getFrontWheelIdx());\r\n    console.log(\"  backWheel: \", rider.getBackWheelIdx());\r\n    console.log(\"  bikeFoot: \", rider.getBikeFootIdx());\r\n    console.log(\"  buttIdx: \", rider.getButtIdx());\r\n    console.log(\"  chainIdx: \", rider.getChainIdx());\r\n    let verticesTemp = rider.getVertices();\r\n    console.log(\"  vertices: \", verticesTemp.ptr, verticesTemp.getOffset(), verticesTemp.getLength());\r\n    for (let i = 0; i < verticesTemp.getLength(); i++) {\r\n\r\n        let v = verticesTemp.get(i);\r\n        console.log(\"    \", i, v.getX(), v.getY());\r\n    }\r\n}", "import { Builder, Schema } from \"./Schema.js\";\r\nimport * as RiderCreator from \"./RiderCreator.ts\";\r\n\r\nexport type Level = {\r\n    lineArrays: number[][][],\r\n    checkpoints: number[][],\r\n    circles: number[][],\r\n    offset?: number[]\r\n};\r\n\r\nexport type Point = {x: number, y: number};\r\n\r\nexport type ClosestType = \"none\" | \"lineArrayPoint\" | \"circle\" | \"checkpoint\";\r\n\r\nexport type Closest = {\r\n    point: Point | null,\r\n    distance: number,\r\n    type: ClosestType,\r\n    index: number,\r\n    subIndex: number\r\n};\r\n\r\nexport function findClosest(level: Level, pos: Point, maxDistance: number = Number.MAX_VALUE): Closest {\r\n    let closest: Closest = {\r\n        point: null,\r\n        distance: maxDistance,\r\n        type: \"none\",\r\n        index: -1,\r\n        subIndex: -1\r\n    }\r\n\r\n    let register = (closestPoint: Point, distance: number, type: ClosestType, index: number, subIndex: number = -1) => {\r\n        if (distance < closest.distance) {\r\n            closest.distance = distance;\r\n            closest.point = closestPoint;\r\n            closest.type = type;\r\n            closest.index = index;\r\n            closest.subIndex = subIndex;\r\n        }\r\n    }\r\n\r\n    let closestCircle = (x: number, y: number, r: number, type: ClosestType, index: number, subIndex: number = -1) => {\r\n        let dx = pos.x - x;\r\n        let dy = pos.y - y;\r\n        let distance = Math.sqrt(dx * dx + dy * dy) - r;\r\n        register({x, y}, distance, type, index, subIndex);\r\n    }\r\n\r\n    for (let i = 0; i < level.circles.length; i++) {\r\n        closestCircle(level.circles[i][0], level.circles[i][1], level.circles[i][2], \"circle\", i);\r\n    }\r\n\r\n    for (let i = 0; i < level.lineArrays.length; i++) {\r\n        for (let j = 0; j < level.lineArrays[i].length; j++) {\r\n            closestCircle(level.lineArrays[i][j][0], level.lineArrays[i][j][1], 0, \"lineArrayPoint\", i, j);\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < level.checkpoints.length; i++) {\r\n        let checkpoint = level.checkpoints[i];\r\n        let x1 = checkpoint[0];\r\n        let y1 = checkpoint[1];\r\n        let x2 = checkpoint[0];\r\n        let y2 = checkpoint[1] - 100;\r\n        closestCircle(x1, y1, 0, \"checkpoint\", i);\r\n        closestCircle(x2, y2, 0, \"checkpoint\", i);\r\n        let dx = x2 - x1;\r\n        let dy = y2 - y1;\r\n        let t = ((pos.x - x1) * dx + (pos.y - y1) * dy) / (dx * dx + dy * dy);\r\n        let x = x1 + t * dx;\r\n        let y = y1 + t * dy;\r\n        if (t >= 0 && t <= 1) {\r\n            let distance = Math.sqrt((pos.x - x) * (pos.x - x) + (pos.y - y) * (pos.y - y));\r\n            register({x, y}, distance, \"checkpoint\", i);\r\n        }\r\n    }\r\n\r\n    return closest;\r\n}\r\n\r\nexport function gameToBinary(schema: Schema) {\r\n    let arrayBuffer = new ArrayBuffer(1024);\r\n    let builder = new Builder(schema, \"TrialsGame\", new DataView(arrayBuffer));\r\n    builder.setUint32(0, \"TrialsGame\", \"state\", 1);\r\n    return arrayBuffer.slice(0, builder.offset);\r\n}\r\n\r\nexport function levelToBinary(schema: Schema, level: Level): ArrayBuffer {\r\n    let arrayBuffer = new ArrayBuffer(1024*64);\r\n    let builder = new Builder(schema, \"Level\", new DataView(arrayBuffer));\r\n    applyLevelToBuilder(builder, level);\r\n    return arrayBuffer.slice(0, builder.offset);\r\n}\r\n\r\nexport function riderToBinary(schema: Schema): ArrayBuffer {\r\n    let arrayBuffer = new ArrayBuffer(1024*64);\r\n    let builder = new Builder(schema, \"Rider\", new DataView(arrayBuffer));\r\n    let riderCreator = new RiderCreator.RiderCreator();\r\n    riderCreator.create();\r\n    riderCreator.applyToBuilder(builder);\r\n    return arrayBuffer.slice(0, builder.offset);\r\n}\r\n\r\nexport function createLevel(): Level {\r\n    let level1 = {\r\n        lineArrays: [[\r\n            [0, 490],\r\n            [10, 500],\r\n            [770, 500],\r\n            [770, 380],\r\n            [1000, 380],\r\n            [1200, 340],\r\n            [1400, 250],\r\n            [1400, 500]\r\n        ]],\r\n        checkpoints: [\r\n            // [500, 0],\r\n            [200, 500],\r\n            [900, 380],\r\n            [2000, 250]\r\n        ],\r\n        circles: [\r\n            [770, 475, 100],\r\n            [2000, 500, 250]\r\n        ],\r\n        offset: [0, 0]\r\n    };\r\n    let level2 = {\r\n        lineArrays: [[\r\n            [0, 1000],\r\n            [300, 1000],\r\n            [500, 950],\r\n            [700, 800],\r\n            [700, 1000],\r\n            [1000, 1000],\r\n            [1000, 800],\r\n            [1300, 950],\r\n            [1500, 1000],\r\n            [2000, 1000]\r\n        ]],\r\n        checkpoints: [\r\n            [100, 1000],\r\n            [1700, 1000]\r\n        ],\r\n        circles: [],\r\n        offset: [2700, -200]\r\n    };\r\n    \r\n    let level3 = {\r\n        lineArrays: [[\r\n            [0, 1000],\r\n            [300, 1000],\r\n            [300, 1100],\r\n            [600, 1000],\r\n            [600, 1100],\r\n            [900, 1000],\r\n            [900, 1100],\r\n            [1200, 1000],\r\n            [1200, 1100],\r\n            [1500, 1000],\r\n            [1500, 1100],\r\n            [1800, 1000]\r\n        ]],\r\n        checkpoints: [\r\n            [100, 1000],\r\n            [2000, 1000]\r\n        ],\r\n        circles: [],\r\n        offset: [5000, 0]\r\n    };\r\n    \r\n    let level4 = {\r\n        lineArrays: [[\r\n            [0, 2000],\r\n            [300, 2000],\r\n            [600, 1500],\r\n            [1000, 1500],\r\n            [1250, 1000],\r\n            [1500, 1000]\r\n        ]],\r\n        checkpoints: [\r\n            [100, 2000],\r\n            [1500, 1000]\r\n        ],\r\n        circles: [],\r\n        offset: [7000, -1000]\r\n    };\r\n    let level5 = {\r\n        lineArrays: [[\r\n            [0, 2000],\r\n            [300, 2000],\r\n            [500, 1750],\r\n            [750, 1800],\r\n            [1000, 1750],\r\n            [1250, 2000],\r\n            [1500, 2000]\r\n        ]],\r\n        checkpoints: [\r\n            [100, 2000],\r\n            [1500, 2000]\r\n        ],\r\n        circles: [\r\n            [750, 1650, 50]\r\n        ],\r\n        offset: [8500, -1500]\r\n\r\n    };\r\n    let level6 = {\r\n        lineArrays: [[\r\n            [0, 2000],\r\n            [500, 2000],\r\n            [700, 1800],\r\n            [700, 1600],\r\n            [600, 1500]\r\n        ]],\r\n        checkpoints: [\r\n            [100, 2000],\r\n            [1500, 2000]\r\n        ],\r\n        circles: [\r\n            [750, 1650, 50]\r\n        ],\r\n        offset: [10000, -1000]\r\n    };\r\n    //lines: lineArrayToLineList(\r\n    let levels = [level1, level2, level3, level4, level5, level6];\r\n\r\n    // combine levels\r\n    let lineArrays: number[][][] = [];\r\n    // let lines: number[][] = [];\r\n    let circles: number[][] = [];\r\n    let checkpoints: number[][] = [];\r\n\r\n    for (let level of levels) {\r\n        for (let lineArray of level.lineArrays) {            \r\n            addOffset(lineArray, level.offset);\r\n        }\r\n        addOffset(level.circles, level.offset);\r\n        addOffset(level.checkpoints, level.offset);\r\n        lineArrays = lineArrays.concat(level.lineArrays);\r\n        circles = circles.concat(level.circles);\r\n        checkpoints = checkpoints.concat(level.checkpoints);\r\n    }\r\n    return {lineArrays, circles, checkpoints};\r\n}\r\n\r\nfunction addOffset(xyList: number[][], xyOffset: number[]) {\r\n    for (let i = 0; i < xyList.length; i++) {\r\n        xyList[i][0] += xyOffset[0];\r\n        xyList[i][1] += xyOffset[1];\r\n    }\r\n}\r\n\r\nexport function lineArraysToLines(lineArrays: number[][][]): number[][][] {\r\n    let lines: number[][][] = [];\r\n    for (let lineArray of lineArrays) {\r\n        lineArrayToLineList(lineArray).forEach(line => lines.push(line));\r\n    }\r\n    return lines;\r\n}\r\n\r\nfunction lineArrayToLineList(lineArray: number[][]): number[][][] {\r\n    let lines: number[][][] = [];\r\n    for (let i = 1; i < lineArray.length; i++) {\r\n        lines.push([[lineArray[i - 1][0], lineArray[i - 1][1]], [lineArray[i][0], lineArray[i][1]]]);\r\n    }\r\n    return lines;\r\n}\r\n\r\nexport function applyLevelToBuilder(b: Builder, level: Level) {\r\n    let lines: number[][][] = [];\r\n    for (let lineArray of level.lineArrays) {\r\n        lineArrayToLineList(lineArray).forEach(line => lines.push(line));\r\n    }\r\n\r\n    let [linesPtr, linesLength] = b.setArray(0, \"Level\", \"lines\", b.createArray(\"Line\", lines.length));\r\n    for (let i = 0; i < lines.length; i++) {\r\n        let line = b.getArrayElement(linesPtr, \"Line\", i);\r\n        let v1 = lines[i][0];\r\n        let v2 = lines[i][1];\r\n        b.setFp(line, \"Line\", \"x1\", v1[0]);\r\n        b.setFp(line, \"Line\", \"y1\", v1[1]);\r\n        b.setFp(line, \"Line\", \"x2\", v2[0]);\r\n        b.setFp(line, \"Line\", \"y2\", v2[1]);\r\n    }\r\n\r\n    let [checkpointsPtr, checkpoinsLength] = b.setArray(0, \"Level\", \"checkpoints\", b.createArray(\"Checkpoint\", level.checkpoints.length));\r\n    for (let i = 0; i < level.checkpoints.length; i++) {\r\n        let checkpoint = b.getArrayElement(checkpointsPtr, \"Checkpoint\", i);\r\n        b.setFp(checkpoint, \"Checkpoint\", \"x\", level.checkpoints[i][0]);\r\n        b.setFp(checkpoint, \"Checkpoint\", \"y\", level.checkpoints[i][1]);\r\n    }\r\n\r\n    let [circlesPtr, circlesLength] = b.setArray(0, \"Level\", \"circles\", b.createArray(\"Circle\", level.circles.length));\r\n    for (let i = 0; i < level.circles.length; i++) {\r\n        let circle = b.getArrayElement(circlesPtr, \"Circle\", i);\r\n        b.setFp(circle, \"Circle\", \"x\", level.circles[i][0]);\r\n        b.setFp(circle, \"Circle\", \"y\", level.circles[i][1]);\r\n        b.setFp(circle, \"Circle\", \"radius\", level.circles[i][2]);\r\n    }\r\n}", "let eventSource: EventSource | null = null;\r\n\r\nexport function setupServerSideEvents(callback) {\r\n    if (eventSource) {\r\n        eventSource.close();\r\n    }\r\n\r\n    console.log(\"setupServerSideEvents\");\r\n    eventSource = new EventSource(`/trials/events`);\r\n    eventSource.onmessage = callback;\r\n    eventSource.onerror = (_) => {\r\n        eventSource?.close();\r\n        setTimeout(() => setupServerSideEvents(callback), 2000);\r\n    };\r\n}    \r\n\r\nexport function setupReload() {\r\n    console.log(\"setupReload\");\r\n    setupServerSideEvents((e) => {\r\n        console.log(\"setupReload\", e.data);\r\n        setTimeout(() => location.reload(), e.data.endsWith(\".js\") ? 0 : 3000);\r\n    });\r\n}", "import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n", "<script lang=\"ts\">\r\n    import { levelEntryStore } from './EditorStore';\r\n    import { createEventDispatcher } from 'svelte';\r\n\r\n    let levels = [];\r\n    let dialog: HTMLDialogElement;    \r\n    let levelToDelete: any = null;\r\n    const dispatch = createEventDispatcher();\r\n\r\n    console.log(\"Open level\", $levelEntryStore);\r\n\r\n\r\n    async function fetchLevels() {\r\n        levels = await (await fetch('/trials/api/levels')).json();\r\n    }\r\n    fetchLevels();\r\n\r\n\r\n    function prettyDate(dateIso: string): string {\r\n        function pluralize(value: number, unit: string): string {\r\n            return `${value} ${unit}${value === 1 ? '' : 's'} ago`;\r\n        }    \r\n\r\n        if (dateIso) {\r\n            let date = new Date(dateIso)\r\n            let diff = (new Date().getTime() - date.getTime()) / 1000 / 60;\r\n            if (diff < 1) return \"just now\";\r\n            if (diff < 60) return pluralize(diff.toFixed(0), 'minute');\r\n            if (diff < 60 * 24) return pluralize((diff / 60).toFixed(0), 'hour');\r\n            return date.getDate() + \" \" + date.toLocaleString('default', { month: 'short' }) + \" \" + date.getFullYear();\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    async function handleOpen(level) {\r\n        // fetch level data\r\n        let data = await (await fetch('/trials/api/levels/' + level.id)).json();\r\n        console.log(\"Open level\", level, data);\r\n        $levelEntryStore = data;\r\n        console.log(\"levelStore\", $levelEntryStore);\r\n        dispatch('close');\r\n    }\r\n\r\n    function confirmDelete(level) {\r\n        levelToDelete = level;\r\n        dialog.showModal();\r\n    }\r\n\r\n    async function handleDelete() {\r\n        if (levelToDelete) {\r\n            console.log(\"Delete level\", levelToDelete);\r\n            await fetch('/trials/api/levels/' + levelToDelete.id, { method: 'DELETE' });\r\n            fetchLevels();\r\n            levelToDelete = null;\r\n        }\r\n        dialog.close();\r\n    }\r\n\r\n    function cancelDelete() {\r\n        levelToDelete = null;\r\n        dialog.close();\r\n    }</script>\r\n\r\n\r\n<div class=\"levels-container\">\r\n    <h1 style=\"margin: 0; color: #2e7d32;\">Levels <button class=\"refresh\" on:click={fetchLevels}>↻</button></h1>\r\n    \r\n    \r\n    <div class=\"levels-list\">\r\n        {#each levels as level (level.id)}\r\n            <div class=\"level-item\">\r\n                <div class=\"level-info\">\r\n                    {level.info.name} {prettyDate(level.info.created)}\r\n                </div>\r\n                <div class=\"level-buttons\">\r\n                    <button class=\"btn\" on:click={() => handleOpen(level)}>📂</button>\r\n                    <button class=\"btn btn-trash\" on:click={() => confirmDelete(level)}>🗑️</button>\r\n                </div>\r\n            </div>\r\n        {/each}\r\n    </div>\r\n</div>\r\n\r\n<dialog bind:this={dialog}>\r\n    <p>Are you sure you want to delete this level?</p>\r\n    <div class=\"dialog-buttons\">\r\n        <button class=\"btn\" on:click={handleDelete}>Yes</button>\r\n        <button class=\"btn btn-trash\" on:click={cancelDelete}>No</button>\r\n    </div>\r\n</dialog>\r\n\r\n<style>\r\n    .levels-container {\r\n        flex: 1;\r\n        padding: 1rem;\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n\r\n    .levels-list {\r\n        flex: 1;\r\n        overflow-y: auto;\r\n        min-height: 0;\r\n    }\r\n\r\n    .level-item {\r\n        display: flex;\r\n        gap: 1rem;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        background-color: #fff;\r\n        padding: 0.5rem;\r\n        margin-bottom: 0.5rem;\r\n        border-radius: 5px;\r\n    }\r\n\r\n    .level-item:last-child {\r\n        margin-bottom: 0;\r\n    }    \r\n\r\n    .level-info {\r\n        flex-grow: 1;\r\n        color: #424242 !important;\r\n    }\r\n\r\n    .level-buttons {\r\n        display: flex;\r\n        gap: 0.5rem;\r\n    }\r\n\r\n    .btn {\r\n        font-size: 1.25rem;\r\n        padding: 0.5rem 1rem;\r\n        border-radius: 5px;\r\n        background-color: #1565c0;\r\n        /* #1565c0; */\r\n    }\r\n    .btn:hover {\r\n        background-color: #ff7043;\r\n    }\r\n\r\n    .btn-trash {\r\n        /* background-color: #dc3545; */\r\n    }\r\n\r\n    .btn:hover {\r\n        opacity: 0.8;\r\n    }\r\n\r\n    dialog {\r\n        border: none;\r\n        border-radius: 5px;\r\n        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n        padding: 1rem;\r\n    }\r\n\r\n    .dialog-buttons {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        gap: 0.5rem;\r\n    }    \r\n</style>\r\n", "<script lang=\"ts\">\r\n    import { createSchema, schemaDefinition } from \"../Schema.js\";\r\n    import { createLevel, levelToBinary }  from \"../LevelCreator.ts\";\r\n    import { levelEntryStore } from './EditorStore';\r\n    import { createEventDispatcher } from 'svelte';\r\n    import { type LevelEntry } from './LevelEntry';\r\n\r\n    let dialog: HTMLDialogElement;    \r\n    const dispatch = createEventDispatcher();\r\n    \r\n    let level = $levelEntryStore;\r\n    let levelId = level.id;\r\n    let levelName = level.info?.name ?? \"?\";\r\n    $: console.log(\"Level\", level, levelId, levelName);\r\n\r\n    function createNewLevelEntry(): LevelEntry {\r\n        let newInfo = Object.assign({}, $levelEntryStore.info, {name: levelName});\r\n        let newLevelEntry = Object.assign({}, $levelEntryStore, {info: newInfo});\r\n        let schema = createSchema(schemaDefinition);\r\n        let arrayBuffer = levelToBinary(schema, createLevel());\r\n        newLevelEntry.base64 = btoa(String.fromCharCode(...new Uint8Array(arrayBuffer)));\r\n        return newLevelEntry;\r\n    }    \r\n\r\n    async function save() {\r\n        if (levelId && levelId >= 0) {\r\n            let newEntry = createNewLevelEntry();\r\n            await fetch('/trials/api/levels/' + levelId, {\r\n                method: 'PUT',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify(newEntry),\r\n            });\r\n            $levelEntryStore = newEntry;\r\n            dispatch('close');\r\n        }\r\n    }\r\n\r\n    async function saveAs() {\r\n        let newEntry = createNewLevelEntry();\r\n        let result = await (await fetch('/trials/api/levels', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify(newEntry),\r\n        })).json();\r\n        newEntry.id = result.id;\r\n        $levelEntryStore = newEntry;\r\n        dispatch('close');\r\n    }\r\n</script>\r\n\r\n<div class=\"levels-container\">\r\n    <h1 style=\"margin: 0; color: #2e7d32;\">Save</h1>\r\n    <div>Name</div>\r\n    <input type=\"text\" bind:value={levelName} style=\"width: 100%; padding: 0.5rem; font-size: 1.25rem;\">\r\n    <div style=\"display: flex; justify-content: flex-end; gap: 0.5rem; margin-top: 1rem;\">\r\n        <button on:click={() => dialog.showModal()} class=\"btn\" disabled={!levelId || levelId < 0}>Save</button>\r\n        <button on:click={saveAs} class=\"btn\">Save as copy</button>    \r\n        <button on:click={() => dispatch(\"close\")} class=\"btn\">Cancel</button>\r\n    </div>    \r\n</div>\r\n\r\n<dialog bind:this={dialog}>\r\n    <p>Are you sure you want to overwrite the level?</p>\r\n    <div class=\"dialog-buttons\">\r\n        <button class=\"btn\" on:click={save}>Yes</button>\r\n        <button class=\"btn\" on:click={() => dialog.close()}>No</button>\r\n    </div>\r\n</dialog>\r\n\r\n<style>\r\n    .levels-container {\r\n        flex: 1;\r\n        padding: 1rem;\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n\r\n    .levels-list {\r\n        flex: 1;\r\n        overflow-y: auto;\r\n        min-height: 0;\r\n    }\r\n\r\n    .level-item {\r\n        display: flex;\r\n        gap: 1rem;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        background-color: #fff;\r\n        padding: 0.5rem;\r\n        margin-bottom: 0.5rem;\r\n        border-radius: 5px;\r\n    }\r\n\r\n    .level-item:last-child {\r\n        margin-bottom: 0;\r\n    }    \r\n\r\n    .level-info {\r\n        flex-grow: 1;\r\n        color: #424242 !important;\r\n    }\r\n\r\n    .level-buttons {\r\n        display: flex;\r\n        gap: 0.5rem;\r\n    }\r\n\r\n    .btn {\r\n        font-size: 1.25rem;\r\n        padding: 0.5rem 1rem;\r\n        border-radius: 5px;\r\n        background-color: #1565c0;\r\n        color: #fff;\r\n        /* #1565c0; */\r\n    }\r\n    .btn:hover {\r\n        background-color: #ff7043;\r\n        opacity: 0.8;\r\n    }\r\n\r\n    .btn:disabled {\r\n        /* background-color: #cfd8dc; */\r\n        background-color: #90a4ae;\r\n        /* background-color: #cccccc; */\r\n        cursor: not-allowed;\r\n        color: #eee;\r\n        /* opacity: 0.6; */\r\n    }    \r\n\r\n    dialog {\r\n        border: none;\r\n        border-radius: 5px;\r\n        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n        padding: 1rem;\r\n    }\r\n\r\n    .dialog-buttons {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        gap: 0.5rem;\r\n    }    \r\n</style>\r\n", "<script lang=\"ts\">\r\n    import { gridStore } from './EditorStore';\r\n    import { createEventDispatcher } from 'svelte';\r\n\r\n    const dispatch = createEventDispatcher();\r\n    let gridOptions = [0, 32, 64, 128, 256];\r\n</script>\r\n\r\n<div class=\"levels-container\">\r\n    <h1 style=\"margin: 0; color: #2e7d32;\">Grid</h1>\r\n    <input type=\"number\" min=\"0\" max=\"256\" step=\"8\" bind:value={$gridStore} />    \r\n    <input type=\"range\" id=\"grid-slider\" min=\"0\" max=\"256\" step=\"8\" bind:value={$gridStore} />\r\n    <div style=\"display: flex; gap: 0.5rem\">\r\n        {#each gridOptions as gridOption}\r\n            <button class=\"btn\" class:selected={$gridStore == gridOption} on:click|preventDefault|stopPropagation={() => $gridStore = gridOption}>\r\n                {gridOption}\r\n            </button>\r\n    {/each}\r\n    </div>\r\n</div>\r\n\r\n<style>\r\n    .levels-container {\r\n        flex: 1;\r\n        gap: 0.5rem;\r\n        padding: 1rem;\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n\r\n    .btn {\r\n        font-size: 1.25rem;\r\n        padding: 0.5rem 1rem;\r\n        border-radius: 5px;\r\n        /* background-color: #455a64; */\r\n        background-color: #9e9e9e;        \r\n        /* background-color: #90a4ae; */\r\n        color: #fff;\r\n        /* #1565c0; */\r\n    }\r\n    .btn:hover {\r\n        background-color: #ff7043;\r\n        opacity: 0.8;\r\n    }\r\n    .btn.selected {\r\n        background-color: #1565c0;\r\n    }\r\n</style>\r\n", "<script lang=\"ts\">\r\n    import { Editor } from './Editor';\r\n    import { scaleFactorStore, modeStore, modes } from './EditorStore';\r\n    import { createEventDispatcher } from 'svelte';\r\n    import Open from './Open.svelte';\r\n    import Save from './Save.svelte';\r\n    import Grid from './Grid.svelte';\r\n\r\n    export let editor: Editor;\r\n    \r\n    let showOpen = false;\r\n    let showSave = false;\r\n    let showGrid = false;\r\n    let openMenu;\r\n    let saveMenu;\r\n    let gridMenu;\r\n    let gridButton;\r\n\r\n    const dispatch = createEventDispatcher();\r\n\r\n    let modeMap = {\r\n        addCheckpoint:\"🚩\",\r\n        addCircle: '⚫',//'⚪',\r\n        addLineArray: '┌─┘',\r\n        movePoint: \"↔\", //'◦ ↔ ◦'\r\n    }\r\n\r\n    let overlayVisible = true;\r\n\r\n    window.addEventListener('keydown', (event) => {\r\n        if (event.key === 'F1') {\r\n            event.preventDefault();\r\n            overlayVisible = !overlayVisible;\r\n        }\r\n    });    \r\n\r\n    async function toggleOpenMenu() {\r\n        showOpen = !showOpen;\r\n        if (showOpen) {\r\n            showSave = false;\r\n            showGrid = false;\r\n        }\r\n    }\r\n\r\n    async function toggleSaveMenu() {\r\n        console.log(\"toggleSaveMenu\");\r\n        showSave = !showSave;\r\n        if (showSave) {\r\n            showOpen = false;\r\n            showGrid = false;\r\n        }\r\n    }\r\n    \r\n    async function toggleGridMenu(event) {\r\n        console.log(\"toggleGridMenu\");\r\n        showGrid = !showGrid;\r\n        if (showGrid) {\r\n            const btnRect = gridButton.getBoundingClientRect();\r\n            const btnParentRect = gridButton.parentElement.getBoundingClientRect();\r\n            let menuRect = gridMenu.getBoundingClientRect();;\r\n            gridMenu.style.top = Math.min(btnRect.top, btnParentRect.bottom - menuRect.height) + \"px\";\r\n\r\n            showOpen = false;\r\n            showSave = false;\r\n        }\r\n    }\r\n\r\n    document.addEventListener('mousedown', (event) => {\r\n        if (!openMenu?.contains(event.target)) {\r\n            showOpen = false;\r\n        }\r\n        if (!saveMenu?.contains(event.target)) {\r\n            showSave = false;\r\n        }\r\n        if (!gridMenu?.contains(event.target)) {\r\n            showGrid = false;\r\n        }        \r\n    });\r\n    \r\n    function toPercent(scale: number) {\r\n        return (scale * 100).toFixed(0) + \"%\";\r\n    }\r\n</script>\r\n\r\n<div class=\"toolbar\">\r\n    <div style=\"height: 1rem\"></div>\r\n    <button on:click|preventDefault|stopPropagation={() => dispatch(\"new\")} class=\"btn\">\r\n        <div class=\"icon\">📄</div>\r\n    </button>\r\n    <button on:mousedown|preventDefault|stopPropagation={toggleOpenMenu} class=\"btn\" class:selected={showOpen}>\r\n        <div class=\"icon\">📂</div>\r\n        <div class=\"btn-arrow\">►</div>\r\n    </button>\r\n    <button on:mousedown|preventDefault|stopPropagation={toggleSaveMenu} class=\"btn\" class:selected={showSave}>\r\n        <div class=\"icon\">💾</div>\r\n        <div class=\"btn-arrow\">►</div>\r\n    </button>\r\n    <button on:click|preventDefault|stopPropagation={() => dispatch(\"undo\")} class=\"btn\">\r\n        <div class=\"icon\">↺</div>\r\n    </button>\r\n    <button on:click|preventDefault|stopPropagation={() => dispatch(\"redo\")} class=\"btn\">\r\n        <div class=\"icon\">↻</div>\r\n    </button>\r\n    <button on:click|preventDefault|stopPropagation={() => dispatch(\"play\")} class=\"btn\">\r\n        <div class=\"icon\">▶</div>\r\n    </button>\r\n    <button bind:this={gridButton} on:mousedown|preventDefault|stopPropagation={toggleGridMenu} class=\"btn\" class:selected={showGrid}>\r\n        <div class=\"icon\">#</div>\r\n        <div class=\"btn-arrow\">►</div>\r\n    </button>\r\n    <div style=\"height: 1rem\"></div>\r\n    <hr>\r\n    <div style=\"height: 1rem\"></div>\r\n    {#each modes as mode}\r\n        <button class=\"btn\" class:mode_selected={$modeStore == mode} on:click|preventDefault|stopPropagation={() => $modeStore = mode}>\r\n            <div class=\"icon\"> {@html modeMap[mode] || mode}</div>\r\n        </button>\r\n    {/each}\r\n\r\n    <button class=\"btn\" style=\"margin-top: auto; text-align: center;\">\r\n        <div class=\"icon2\" style=\"padding: 0.5rem 0;\">🔍️ {toPercent($scaleFactorStore)}</div>\r\n    </button>\r\n    {#if showOpen}\r\n        <div class=\"btn-big-menu\" bind:this={openMenu}>\r\n            <Open on:close={() => showOpen = false} />\r\n        </div>\r\n    {/if}        \r\n    <div class=\"btn-small-menu\" class:hidden={!showGrid} bind:this={gridMenu}>\r\n        <Grid on:close={() => showGrid = false} />\r\n    </div>\r\n\r\n    {#if showSave}\r\n        <div class=\"btn-small-menu\" bind:this={saveMenu}>\r\n            <Save on:close={() => showSave = false} />\r\n        </div>\r\n    {/if}      \r\n</div>\r\n<!-- \r\n<button on:click|preventDefault|stopPropagation={() => dispatch(\"play\")} class=\"icon\">⚙🔍️⛶#🔍🔎⏷▾▼▶▸►🚲🏍️</button>\r\n-->\r\n<style>\r\n    .toolbar {\r\n        background-color: #9cb; \r\n        width: 5rem; \r\n        height: 100%; \r\n        display: flex; \r\n        flex-direction: column; \r\n        position: relative;\r\n    }\r\n    .label {\r\n        font-size: 0.8rem;\r\n        font-weight: 600;\r\n        margin-top: 0.5rem;\r\n    }\r\n\r\n    .icon {\r\n        padding: 0.25rem;\r\n        font-size: 1.75rem;\r\n        white-space: nowrap;\r\n        overflow: hidden;\r\n    }\r\n\r\n    .btn {\r\n        padding: 0.25rem;\r\n        position: relative;\r\n        display: inline-block;\r\n    }\r\n    .btn:hover {\r\n        /* background-color: #e8f5e9; */\r\n        background-color: #7fa1b2;\r\n        /* background-color: #b3c7d4; */\r\n        /* background-color: #a9d4cb; */\r\n    }\r\n\r\n    .btn-arrow {\r\n        position: absolute;\r\n        top: 50%;\r\n        right: 5%;\r\n        transform: translateY(-50%);\r\n        white-space: nowrap;\r\n    }\r\n    .selected {\r\n        background-color: #e8f5e9;\r\n    }\r\n    .mode_selected {\r\n        background-color: #ff7043;\r\n        opacity: 0.8;\r\n    }\r\n    .btn-big-menu {\r\n        display: flex;\r\n        background-color: #e8f5e9;\r\n        position: absolute;\r\n        top: 5%;\r\n        left: 100%;\r\n        white-space: nowrap;\r\n        max-height: 90%;\r\n    }\r\n    .btn-small-menu {\r\n        background-color: #e8f5e9;\r\n        position: absolute;\r\n        top: 0;\r\n        left: 100%;\r\n        white-space: nowrap;\r\n        /* height: 100%; */\r\n    }\r\n    .hidden {\r\n        /* display: none; */\r\n        visibility: hidden;\r\n    }\r\n\r\n  /* Container query based on width */\r\n  @container (min-width: 500px) {\r\n    .container {\r\n      background-color: lightblue;\r\n    }\r\n  }    \r\n</style>\r\n", "<script lang=\"ts\">\r\n    import { onMount } from 'svelte';\r\n    import { Editor } from './Editor';\r\n    import EditorToolbar from './EditorToolbar.svelte';\r\n\r\n    export let editor: Editor;\r\n    let canvas: HTMLElement;\r\n\r\n    onMount(() => editor.start(canvas));\r\n</script>\r\n\r\n<div style=\"position: absolute; top: 0; left: 0; right: 0; bottom: 0; display: flex;\">\r\n    <EditorToolbar editor={editor}\r\n        on:new={() => editor.new()}\r\n        on:undo={() => editor.undoRedoManager.undo()}\r\n        on:redo={() => editor.undoRedoManager.undo()}\r\n        ></EditorToolbar>\r\n    <canvas bind:this={canvas} style=\"flex: 1; min-width: 0; min-height: 0;\"></canvas>\r\n</div>", "export type Action = {\r\n    undo: () => void,\r\n    redo: () => void\r\n}\r\n\r\nexport class UndoRedoManager {\r\n    private undoRedoStack: Action[] = [];\r\n    private undoRedoIndex = 0;\r\n\r\n    addAction(action: Action) {\r\n        this.undoRedoStack = this.undoRedoStack.slice(0, this.undoRedoIndex);\r\n        this.undoRedoStack.push(action);\r\n        this.undoRedoIndex = this.undoRedoStack.length;\r\n        action.redo();\r\n    }\r\n\r\n    undo() {\r\n        console.log(\"undo\");\r\n        let action = this.undoRedoStack[this.undoRedoIndex - 1];\r\n        if (action) {\r\n            action.undo();\r\n            this.undoRedoIndex--;\r\n        }\r\n    }\r\n\r\n    redo() {\r\n        console.log(\"redo\");\r\n        let action = this.undoRedoStack[this.undoRedoIndex];\r\n        if (action) {\r\n            action.redo();\r\n            this.undoRedoIndex++;\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.undoRedoStack = [];\r\n        this.undoRedoIndex = 0;\r\n    }\r\n}", "export class InputRecording {\r\n    public recording: number[] = [];\r\n\r\n    record(input: number) {\r\n        this.recording.push(input);\r\n    }\r\n\r\n    clear() {\r\n        this.recording = [];\r\n    }\r\n\r\n    runnlengthEncode() {\r\n        let result = [];\r\n        let current = this.recording[0];\r\n        let repeatCount = 0;\r\n        let i = 1;\r\n        while (i < this.recording.length) {\r\n            if (this.recording[i] == current && repeatCount < 0xff) {\r\n                repeatCount++;\r\n            } else {\r\n                result.push(current);\r\n                result.push(repeatCount);\r\n                current = this.recording[i];\r\n                repeatCount = 0;\r\n            }\r\n            i++;\r\n        }\r\n        result.push(current);\r\n        result.push(repeatCount);\r\n        return result;\r\n    }\r\n\r\n    runnlengthDecode(data: number[]) {\r\n        let result = [];\r\n        for (let i = 0; i < data.length; i += 2) {\r\n            for (let j = 0; j <= data[i + 1]; j++) {\r\n                result.push(data[i]);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nfunction testInputRecording() {\r\n    let input = [1, 1, 1, 2, 1];\r\n    let recording = new InputRecording();\r\n    input.forEach(i => recording.record(i));\r\n    let encoded = recording.runnlengthEncode();\r\n    let decoded = recording.runnlengthDecode(encoded);\r\n    console.log(\"InputRecording test\", encoded, decoded, \"==\", input);\r\n    if (input.some((val, i) => val !== decoded[i])) {\r\n        console.error(\"InputRecording test failed\");\r\n        return;\r\n    }\r\n}\r\ntestInputRecording();\r\n", "import { Level, Rider, TrialsGame } from \"./GameStructGeneratedCode\";\r\nimport { InputRecording } from \"./InputRecording\";\r\n\r\nexport async function createPhysics(): Promise<Physics> {\r\n    return new Promise((resolve, reject) => {\r\n        const script = document.createElement('script');\r\n        script.src = '/trials/public/physics.js';\r\n        document.body.appendChild(script);\r\n\r\n        script.onload = async () => resolve(new Physics(await createPhysicsModule()));      \r\n        script.onerror = (error) => reject(new Error(`Failed to load script: ${error}`));\r\n    });\r\n}\r\n\r\nexport class Physics {\r\n    levelHeapPtr: number = 0;\r\n    riderHeapPtr: number = 0;\r\n    trialsGame: TrialsGame;\r\n    level: Level;\r\n    rider: Rider;\r\n    inputRecording = new InputRecording();\r\n\r\n    constructor(public module) {\r\n        let gamePtr = module._getGamePtr();\r\n        this.trialsGame = new TrialsGame(new DataView(module.HEAPU8.buffer, gamePtr, TrialsGame.SIZE), 0);\r\n    }\r\n\r\n    setData(levelData: ArrayBuffer, riderData: ArrayBuffer) {\r\n        console.log(\"setData\", levelData.byteLength, riderData.byteLength);\r\n        if (this.levelHeapPtr) {\r\n            console.log(\"freeing levelHeapPtr\", this.levelHeapPtr);\r\n            this.module._free(this.levelHeapPtr);\r\n        }\r\n        if (this.riderHeapPtr) {\r\n            console.log(\"freeing riderHeapPtr\", this.riderHeapPtr);\r\n            this.module._free(this.riderHeapPtr);\r\n        }\r\n\r\n        const levelUint8 = new Uint8Array(levelData);\r\n        this.levelHeapPtr = this.module._malloc(levelUint8.length);\r\n        this.module.HEAPU8.set(levelUint8, this.levelHeapPtr);\r\n    \r\n        const riderUint8 = new Uint8Array(riderData);\r\n        this.riderHeapPtr = this.module._malloc(riderUint8.length);\r\n        this.module.HEAPU8.set(riderUint8, this.riderHeapPtr);\r\n    \r\n        this.module._setData(this.levelHeapPtr, this.riderHeapPtr);\r\n\r\n        this.level = new Level(new DataView(this.module.HEAPU8.buffer, this.levelHeapPtr, levelUint8.length));\r\n        this.rider = new Rider(new DataView(this.module.HEAPU8.buffer, this.riderHeapPtr, riderUint8.length));\r\n    }\r\n\r\n    tick(input: number) {\r\n        this.inputRecording.record(input);\r\n        this.module._tick(input);\r\n    }\r\n\r\n    newGame() {\r\n        this.inputRecording.clear();\r\n        this.module._newGame();\r\n    }\r\n}", "import { Canvas } from \"../Canvas.ts\";\r\nimport type { TrialsGame, Level, Rider, VertexArray } from \"../GameStructGeneratedCode.js\";\r\n\r\nexport class GameCanvas {\r\n\r\n    constructor(public canvas: HTMLElement) {}\r\n\r\n    paint(trialsGame: TrialsGame, level: Level, rider: Rider) {\r\n        let ctx = Canvas.updateCanvasSize(this.canvas);\r\n        if (!ctx) {\r\n            return\r\n        }\r\n        ctx.lineWidth = 6;\r\n        ctx.lineCap = \"round\";\r\n        ctx.fillStyle = \"white\";\r\n        ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n        ctx.fillStyle = \"black\";\r\n\r\n        ctx.font = \"16px 'Open Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif\";\r\n        let y = 10;\r\n        ctx.fillText(\"state: \" + trialsGame.getState(), 10, y+=20);\r\n        ctx.fillText(\"tries: \" + trialsGame.getTries(), 10, y+=20);\r\n        ctx.fillText(\"ticks: \" + trialsGame.getTickIdx(), 10, y+=20);\r\n        ctx.fillText(\"checkpoint: \" + trialsGame.getCurrentCheckpoint(), 10, y+=20);\r\n\r\n        let vertices = rider.getVertices();\r\n        let lines = level.getLines();\r\n        let circles = level.getCircles();\r\n        let checkpoints = level.getCheckpoints();\r\n\r\n        // translate to chain position\r\n        ctx.save();\r\n        ctx.translate(this.canvas.width / 2, this.canvas.height / 2);\r\n        ctx.scale(0.25, 0.25);\r\n        let chain = vertices.get(rider.getChainIdx());\r\n        ctx.translate(-chain.getX(), -chain.getY());            \r\n\r\n        GameCanvas.paintRider(ctx, rider);\r\n\r\n        for (let i=0; i<lines.getLength(); i++) {\r\n            let l = lines.get(i);\r\n            Canvas.drawLine(ctx, l.getX1(), l.getY1(), l.getX2(), l.getY2(), \"black\");\r\n        }\r\n\r\n        for (let i=0; i<circles.getLength(); i++) {\r\n            let c = circles.get(i);\r\n            Canvas.fillOval(ctx, c.getX(), c.getY(), c.getRadius(), \"blue\");\r\n        }\r\n        \r\n        for (let i=0; i<checkpoints.getLength(); i++) {\r\n            let cp = checkpoints.get(i);\r\n            Canvas.drawLine(ctx, cp.getX(), cp.getY(), cp.getX(), cp.getY()-100, \"#777700\");\r\n        }\r\n\r\n        ctx.restore();\r\n    }\r\n\r\n    public static paintRider(ctx, rider: Rider) {\r\n        this.paintVertices(ctx, rider.getVertices());\r\n        this.paintEdges(ctx, rider.getVertices(), rider.getEdges());\r\n    }   \r\n\r\n    public static paintVertices(ctx, vertices: VertexArray) {\r\n        for (let i=0; i<vertices.getLength(); i++) {\r\n            let v = vertices.get(i);\r\n            Canvas.fillOval(ctx, v.getX(), v.getY(), v.getRadius(), \"green\");\r\n        }\r\n    }   \r\n\r\n    public static paintEdges(ctx, vertices: VertexArray, edges: EdgeArray) {\r\n        for (let i=0; i<edges.getLength(); i++) {\r\n            let e = edges.get(i);\r\n            let v1 = vertices.get(e.getV1Idx());\r\n            let v2 = vertices.get(e.getV2Idx());\r\n            Canvas.drawLine(ctx, v1.getX(), v1.getY(), v2.getX(), v2.getY(), \"black\");\r\n        }\r\n    }\r\n}", "export const INPUT_LEFT = 1 << 0;\r\nexport const INPUT_RIGHT = 1 << 1;\r\nexport const INPUT_UP = 1 << 2;\r\nexport const INPUT_DOWN = 1 << 3;\r\nexport const INPUT_CHECKPOINT = 1 << 4;\r\n\r\nexport class KeyState {\r\n    \r\n    keys = {};\r\n\r\n    constructor(keydownCallback: ((event: KeyboardEvent) => void) | null = null) {\r\n        window.addEventListener('keydown', (event) => {\r\n            this.keys[event.key] = true;\r\n            if (keydownCallback) {\r\n                keydownCallback(event);\r\n            }\r\n        });    \r\n        window.addEventListener('keyup', (event) => this.keys[event.key] = false);\r\n    }\r\n\r\n    encodeGameInput(): number {\r\n        let input = 0;\r\n        if (this.keys[\"w\"] || this.keys[\"ArrowUp\"]) input |= INPUT_UP;\r\n        if (this.keys[\"a\"] || this.keys[\"ArrowLeft\"]) input |= INPUT_LEFT;\r\n        if (this.keys[\"s\"] || this.keys[\"ArrowDown\"]) input |= INPUT_DOWN;\r\n        if (this.keys[\"d\"] || this.keys[\"ArrowRight\"]) input |= INPUT_RIGHT;\r\n        if (this.keys[\"c\"] || this.keys[\"Backspace\"]) input |= INPUT_CHECKPOINT;\r\n        return input;        \r\n    }\r\n}\r\n"],
  "mappings": "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",
  "names": ["Editor_exports", "__export", "Editor", "noop", "run", "fn", "blank_object", "run_all", "fns", "is_function", "thing", "safe_not_equal", "a", "b", "is_empty", "obj", "subscribe", "store", "callbacks", "callback", "noop", "unsub", "component_subscribe", "component", "store", "callback", "subscribe", "set_store_value", "store", "ret", "value", "globals", "ResizeObserverSingleton", "_ResizeObserverSingleton", "globals", "options", "element", "listener", "entries", "entry", "is_hydrating", "start_hydrating", "end_hydrating", "append", "target", "node", "insert", "target", "node", "anchor", "detach", "node", "destroy_each", "iterations", "detaching", "i", "element", "name", "text", "data", "space", "listen", "node", "event", "handler", "options", "prevent_default", "fn", "stop_propagation", "attr", "node", "attribute", "value", "to_number", "value", "children", "element", "set_data", "text", "data", "set_input_value", "input", "value", "set_style", "node", "key", "value", "important", "toggle_class", "element", "name", "toggle", "custom_event", "type", "detail", "bubbles", "cancelable", "get_custom_elements_slots", "element", "result", "node", "current_component", "set_current_component", "component", "get_current_component", "onMount", "fn", "get_current_component", "createEventDispatcher", "component", "get_current_component", "type", "detail", "cancelable", "callbacks", "event", "custom_event", "fn", "dirty_components", "binding_callbacks", "render_callbacks", "flush_callbacks", "resolved_promise", "update_scheduled", "schedule_update", "flush", "add_render_callback", "fn", "render_callbacks", "seen_callbacks", "flushidx", "flush", "saved_component", "current_component", "dirty_components", "component", "set_current_component", "update", "binding_callbacks", "i", "render_callbacks", "callback", "flush_callbacks", "update_scheduled", "$$", "run_all", "dirty", "add_render_callback", "flush_render_callbacks", "fns", "filtered", "targets", "c", "outroing", "outros", "group_outros", "check_outros", "run_all", "transition_in", "block", "local", "transition_out", "detach", "callback", "ensure_array_like", "array_like_or_iterator", "destroy_block", "block", "lookup", "update_keyed_each", "old_blocks", "dirty", "get_key", "dynamic", "ctx", "list", "lookup", "node", "destroy", "create_each_block", "next", "get_context", "o", "n", "i", "old_indexes", "new_blocks", "new_lookup", "deltas", "updates", "child_ctx", "key", "block", "will_move", "did_move", "insert", "transition_in", "new_block", "old_block", "new_key", "old_key", "run_all", "_boolean_attributes", "boolean_attributes", "create_component", "block", "mount_component", "component", "target", "anchor", "fragment", "after_update", "add_render_callback", "new_on_destroy", "run", "is_function", "run_all", "destroy_component", "detaching", "$$", "flush_render_callbacks", "make_dirty", "i", "dirty_components", "schedule_update", "init", "options", "instance", "create_fragment", "not_equal", "props", "append_styles", "dirty", "parent_component", "current_component", "set_current_component", "noop", "blank_object", "ready", "ret", "rest", "value", "start_hydrating", "nodes", "children", "detach", "transition_in", "end_hydrating", "flush", "SvelteElement", "$$componentCtor", "$$slots", "use_shadow_dom", "type", "listener", "unsub", "create_slot", "name", "node", "element", "attr", "insert", "existing_slots", "get_custom_elements_slots", "attribute", "get_custom_element_value", "key", "reflect_attributes", "attribute_value", "_oldValue", "newValue", "attribute_name", "prop", "props_definition", "transform", "SvelteComponent", "destroy_component", "noop", "type", "callback", "is_function", "callbacks", "index", "props", "is_empty", "PUBLIC_VERSION", "subscriber_queue", "writable", "value", "start", "noop", "stop", "subscribers", "set", "new_value", "safe_not_equal", "run_queue", "subscriber_queue", "subscriber", "i", "update", "fn", "subscribe", "run", "invalidate", "createDefaultLevelEntry", "levelEntryStore", "writable", "createDefaultLevelEntry", "clampedWritable", "initialValue", "min", "max", "subscribe", "set", "update", "fix", "value", "fn", "defaultGrid", "gridStore", "scaleFactorStore", "modes", "modeStore", "Canvas", "_Canvas", "ctx", "x", "y", "r", "style", "x1", "y1", "x2", "y2", "canvas", "schemaDefinition", "createSchema", "schema", "types", "customTypes", "key", "arrays", "allFields", "schemaTypeName", "schemaType", "fields", "schemaFieldName", "schemaFieldTypeName", "array", "field", "calculateOffsetAndSize", "type", "offset", "Builder", "schema", "entryType", "dataView", "ptr", "type", "field", "value", "offset", "array", "index", "length", "srcPtr", "destPtr", "srcArray", "Vertex", "dataView", "ptr", "newValue", "Edge", "VertexArray", "i", "EdgeArray", "i64Array", "Rider", "Line", "Circle", "Checkpoint", "LineArray", "CircleArray", "CheckpointArray", "Level", "TrialsGame", "TYPE_UNKNOWN", "TYPE_RIDER", "TYPE_BACK_WHEEL", "seededRandom", "seed", "Tuple", "Vertex", "TYPE_UNKNOWN", "tempX", "tempY", "v1", "v2", "dx", "dy", "Edge", "createVertex", "x", "y", "radius", "type", "v", "createEdge", "globalVs", "stiffness", "damping", "edge", "createEdges", "vs", "edges", "j", "RiderCreator", "TYPE_BACK_WHEEL", "backWheel", "frontWheel", "stearing", "bikeFoot", "chain", "engine", "round", "skjerm", "vsIdx", "hard", "frontSpring", "e", "knee", "TYPE_RIDER", "butt", "shoulders", "head", "foot", "hands", "knee2", "butt2", "shoulders2", "head2", "foot2", "hands2", "riderVertices", "i", "vs2", "riderEdges", "tireRadius", "wheel", "random", "idx", "b", "verticesPtr", "verticesLength", "vertexPtr", "startVerticesPtr", "startVerticesLength", "edgesPtr", "edgesLength", "startEdgesPtr", "startEdgesLength", "forwardsPtr", "forwardsLength", "backwardsPtr", "backwardsLength", "findClosest", "level", "pos", "maxDistance", "closest", "register", "closestPoint", "distance", "type", "index", "subIndex", "closestCircle", "x", "y", "r", "dx", "dy", "i", "j", "checkpoint", "x1", "y1", "x2", "y2", "t", "levelToBinary", "schema", "level", "arrayBuffer", "builder", "Builder", "applyLevelToBuilder", "riderToBinary", "riderCreator", "RiderCreator", "createLevel", "levels", "lineArrays", "circles", "checkpoints", "lineArray", "addOffset", "xyList", "xyOffset", "i", "lineArraysToLines", "lines", "lineArrayToLineList", "line", "b", "linesPtr", "linesLength", "v1", "v2", "checkpointsPtr", "checkpoinsLength", "checkpoint", "circlesPtr", "circlesLength", "circle", "eventSource", "setupServerSideEvents", "callback", "_", "setupReload", "e", "PUBLIC_VERSION", "ctx", "prettyDate", "insert", "target", "div2", "anchor", "append", "div0", "div1", "button0", "button1", "set_data", "t0", "t0_value", "t2", "t2_value", "i", "h1", "dialog_1", "p", "button2", "dateIso", "pluralize", "value", "unit", "date", "diff", "levels", "dialog", "levelToDelete", "dispatch", "createEventDispatcher", "$levelEntryStore", "fetchLevels", "handleOpen", "level", "data", "confirmDelete", "handleDelete", "cancelDelete", "$$value", "ctx", "insert", "target", "div2", "anchor", "append", "h1", "div0", "input", "div1", "button0", "button1", "button2", "dialog_1", "p", "div3", "button3", "button4", "_a", "_b", "dialog", "dispatch", "createEventDispatcher", "level", "$levelEntryStore", "levelId", "levelName", "createNewLevelEntry", "newInfo", "newLevelEntry", "schema", "createSchema", "schemaDefinition", "arrayBuffer", "levelToBinary", "createLevel", "save", "newEntry", "saveAs", "result", "$$value", "ctx", "insert", "target", "button", "anchor", "i", "div1", "append", "h1", "input0", "input1", "div0", "dispatch", "createEventDispatcher", "gridOptions", "$gridStore", "to_number", "gridOption", "ctx", "insert", "target", "button", "anchor", "append", "div", "toPercent", "modes", "i", "create_if_block_1", "create_if_block", "div15", "div0", "button0", "button1", "button2", "button3", "button4", "button5", "button6", "div11", "hr", "div12", "button7", "div13", "div14", "set_data", "t26", "t26_value", "scale", "editor", "$$props", "showOpen", "showSave", "showGrid", "openMenu", "saveMenu", "gridMenu", "gridButton", "dispatch", "createEventDispatcher", "modeMap", "overlayVisible", "event", "toggleOpenMenu", "toggleSaveMenu", "toggleGridMenu", "btnRect", "btnParentRect", "menuRect", "$$value", "$modeStore", "mode", "ctx", "insert", "target", "div", "anchor", "append", "canvas_1", "editor", "$$props", "canvas", "onMount", "$$value", "UndoRedoManager", "action", "InputRecording", "input", "result", "current", "repeatCount", "data", "i", "j", "testInputRecording", "recording", "encoded", "decoded", "val", "createPhysics", "resolve", "reject", "script", "Physics", "error", "module", "InputRecording", "gamePtr", "TrialsGame", "levelData", "riderData", "levelUint8", "riderUint8", "Level", "Rider", "input", "GameCanvas", "_GameCanvas", "canvas", "trialsGame", "level", "rider", "ctx", "Canvas", "y", "vertices", "lines", "circles", "checkpoints", "chain", "i", "l", "c", "cp", "v", "edges", "e", "v1", "v2", "KeyState", "keydownCallback", "event", "input", "event", "setupReload", "levelEntryStore", "createLevel", "physics", "createPhysics", "schema", "createSchema", "schemaDefinition", "riderData", "riderToBinary", "editor", "Editor", "Editor_default", "UndoRedoManager", "canvas", "value", "scaleFactorStore", "mode", "modes", "unsubscribeMode", "modeStore", "grid", "defaultGrid", "unsubscribeGrid", "gridStore", "unsubscribeScaleFactor", "movePoint", "movePointWorld", "movePointGrid", "pressPoint", "addCircleData", "addLineArrayData", "movePointData", "lastMovePointData", "panStartCenter", "panStartPressPoint", "scaleStartFactor", "scaleStartPressPoint", "endCurrentMode", "keyState", "KeyState", "level", "captureMovePointData", "capturePoint", "captureCircle", "captureCheckpoint", "checkpointCount", "current", "mouseEvents", "mouseEvent", "canvasCoord", "canvasX", "canvasY", "onMouseEvent", "button", "type", "pos", "mouseToWorld", "mouseToGrid", "deltaY", "lengthToWorld", "posGrid", "capture", "delta", "closest", "findClosest", "capturePointGrid", "updateLevelWithClosestPoint", "point", "length", "m", "snapToGrid", "update", "timeStampMs", "ctx", "Canvas", "render", "upperLeft", "lowerRight", "adjustedStartX", "adjustedStartY", "adjustedEndX", "adjustedEndY", "x", "y", "circle", "lines", "lineArraysToLines", "i", "p1", "p2", "GameCanvas", "checkpoints", "cp", "action", "createDefaultLevelEntry", "levelData", "levelToBinary"]
}
